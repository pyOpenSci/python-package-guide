# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, pyOpenSci
# This file is distributed under the same license as the pyOpenSci Python
# Package Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2025
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pyOpenSci Python Package Guide\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-20 11:32+0900\n"
"PO-Revision-Date: 2025-04-14 18:12+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2025\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../documentation/hosting-tools/intro.md:1
msgid "Tools to Build and Host your Documentation"
msgstr "ドキュメンテーションの構築とホスティングのためのツール"

#: ../../documentation/hosting-tools/intro.md:3
msgid ""
"The most common tool for building documentation in the Python ecosystem "
"currently is Sphinx. However, some maintainers are using tools like "
"[mkdocs](https://www.mkdocs.org/) for documentation. It is up to you to "
"use the platform that you prefer for your documentation!"
msgstr ""
"現在、Pythonエコシステムでドキュメントを構築するための最も一般的なツールはSphinxです。 しかし、 "
"[mkdocs](https://www.mkdocs.org/) のようなツールを使っているメンテナもいます。 "
"ドキュメンテーションにどのプラットフォームを使うかはあなた次第です！"

#: ../../documentation/hosting-tools/intro.md:8
msgid ""
"In this section, we introduce Sphinx as a common tool to build "
"documentation. We talk about various syntax options that you can use when"
" writing Sphinx documentation including mySt and rST."
msgstr ""
"このセクションでは、ドキュメントを作成するための一般的なツールとしてSphinxを紹介します。 "
"ここでは、Sphinxのドキュメントを書くときに使用できる、myStやrSTを含むさまざまな構文オプションについて説明します。"

#: ../../documentation/hosting-tools/intro.md:12
msgid ""
"We also talk about ways to publish your documentation online and Sphinx "
"tools that might help you optimize your documentation website."
msgstr "また、ドキュメントをオンラインで公開する方法や、ドキュメントのウェブサイトを最適化するためのSphinxツールについてもお話します。"

#: ../../documentation/hosting-tools/myst-markdown-rst-doc-syntax.md:1
msgid "Documentation syntax: markdown vs. myST vs. rst syntax to create your docs"
msgstr "ドキュメントの構文:ドキュメントを作成するためのマークダウン構文とmyST構文とrst構文"

#: ../../documentation/hosting-tools/myst-markdown-rst-doc-syntax.md:3
msgid "There are three commonly used syntaxes for creating Python documentation:"
msgstr "Pythonのドキュメントを作成するためによく使われる構文は3つあります:"

#: ../../documentation/hosting-tools/myst-markdown-rst-doc-syntax.md:4
msgid ""
"[markdown](https://www.markdownguide.org/): Markdown is an easy-to-learn "
"text syntax. It is the default syntax used in Jupyter Notebooks. There "
"are tools that you can add to a Sphinx website that allow it to render "
"markdown as html. However, using markdown to write documentation has "
"limitations. For instance if you want to add references, colored call out"
" blocks and other custom elements to your documentation, you will need to"
" use either **myST** or **rST**."
msgstr ""
"[markdown](https://www.markdownguide.org/): Markdownは習得しやすいテキスト構文です。 "
"これはJupyter Notebooksで使われるデフォルトの構文です。 "
"マークダウンをhtmlとしてレンダリングするためのツールをSphinxのウェブサイトに追加することができます。 "
"しかし、マークダウンを使ってドキュメントを書くことには限界があります。 "
"例えば、ドキュメントにリファレンスや色付きのカラー出力ブロック、その他のカスタム要素を追加したい場合、 **myST** または **rST** "
"を使用する必要があります。"

#: ../../documentation/hosting-tools/myst-markdown-rst-doc-syntax.md:8
msgid ""
"[rST (ReStructured Text):](https://www.sphinx-"
"doc.org/en/master/usage/restructuredtext/basics.html). **rST** is the "
"native syntax that sphinx supports. rST was the default syntax used for "
"documentation for many years. However, in recent years myST has risen to "
"the top as a favorite for documentation given the flexibility that it "
"allows."
msgstr ""
"[rST (ReStructured Text):](https://www.sphinx-"
"doc.org/en/master/usage/restructuredtext/basics.html)。 "
"**rST**は、sphinxがサポートするネイティブの構文です。rSTは、長年ドキュメントに使用されてきたデフォルトの構文です。しかし、近年、mySTがその柔軟性から、ドキュメンテーションによく使われるようになりました。"

#: ../../documentation/hosting-tools/myst-markdown-rst-doc-syntax.md:9
msgid ""
"[myST:](https://myst-parser.readthedocs.io/en/latest/intro.html) myST is "
"a combination of `markdown` and `rST` syntax. It is a nice option if you "
"are comfortable writing markdown. `myst` is preferred by many because it "
"offers both the rich functionality of rST combined with a simple-to-write"
" markdown syntax."
msgstr ""
"[myST:](https://myst-parser.readthedocs.io/en/latest/intro.html) mySTは普通の"
" `markdown` と `rST` の構文の組み合わせです。 もしあなたがマークダウンを書くのに慣れているのであれば、良いオプションです。 "
"myst`はrSTの豊富な機能と書きやすいマークダウン構文の両方を提供するため、多くの人に好まれています。"

#: ../../documentation/hosting-tools/myst-markdown-rst-doc-syntax.md:12
msgid ""
"While you can chose to use any of the syntaxes listed above, we suggest "
"using `myST` because:"
msgstr "上記のどの構文を使ってもよいですが、 `myST` を使うことをお勧めします:"

#: ../../documentation/hosting-tools/myst-markdown-rst-doc-syntax.md:15
msgid "It is a simpler syntax and thus easier to learn;"
msgstr "よりシンプルな構文であるため、習得しやすいです;"

#: ../../documentation/hosting-tools/myst-markdown-rst-doc-syntax.md:16
msgid ""
"The above simplicity will make it easier for more people to contribute to"
" your documentation."
msgstr "上記のようにシンプルにすることで、より多くの人があなたのドキュメントに貢献しやすくなります。"

#: ../../documentation/hosting-tools/myst-markdown-rst-doc-syntax.md:17
msgid ""
"Most of your core Python package text files, such as your README.md file,"
" are already in `.md` format"
msgstr "README.mdファイルなど、Pythonパッケージのコアとなるテキストファイルのほとんどは、すでに `.md` 形式になっています。"

#: ../../documentation/hosting-tools/myst-markdown-rst-doc-syntax.md:18
msgid ""
"`GitHub` and `Jupyter Notebooks` support markdown thus it's more widely "
"used in the scientific ecosystem."
msgstr "`GitHub` と `Jupyter Notebooks` はMarkdownをサポートしており、科学的なエコシステムでより広く使われています。"

#: ../../documentation/hosting-tools/myst-markdown-rst-doc-syntax.md:22
msgid ""
"If you are on the fence about myST vs rst, you might find that **myST** "
"is easier for more people to contribute to."
msgstr "mySTとrstを迷っているなら、 **myST** の方がより多くの人が貢献しやすいと感じるかもしれません。"

#: ../../documentation/hosting-tools/publish-documentation-online.md:1
msgid "How to publish your Python package documentation online"
msgstr "Pythonパッケージのドキュメントをオンラインで公開する方法"

#: ../../documentation/hosting-tools/publish-documentation-online.md:3
msgid ""
"We suggest that you setup a hosting service for your Python package "
"documentation. Two free and commonly used ways to quickly create a "
"documentation website hosting environment are below."
msgstr ""
"Pythonパッケージドキュメントのホスティングサービスをセットアップすることをお勧めします。 "
"ドキュメンテーションウェブサイトのホスティング環境を素早く作るための、無料でよく使われる2つの方法を以下に示します。"

#: ../../documentation/hosting-tools/publish-documentation-online.md:7
msgid ""
"You can host your documentation yourself using [GitHub "
"Pages](https://pages.github.com/) or another online hosting service."
msgstr ""
"[GitHub Pages](https://pages.github.com/) "
"や他のオンラインホスティングサービスを使って、ドキュメントを自分でホスティングすることができます。"

#: ../../documentation/hosting-tools/publish-documentation-online.md:8
msgid ""
"You can host your documentation using [Read the "
"Docs](https://readthedocs.org/)."
msgstr "[Read the Docs](https://readthedocs.org/) を使ってドキュメントをホストすることができます。"

#: ../../documentation/hosting-tools/publish-documentation-online.md:10
msgid "What is Read the Docs ?"
msgstr "Read the Docsとは？"

#: ../../documentation/hosting-tools/publish-documentation-online.md:11
msgid ""
"[Read the Docs](https://readthedocs.org/) is a documentation hosting "
"service that supports publishing your project's documentation."
msgstr ""
"[Read the Docs](https://readthedocs.org/) "
"は、あなたのプロジェクトのドキュメント公開をサポートするドキュメントホスティングサービスです。"

#: ../../documentation/hosting-tools/publish-documentation-online.md:13
msgid ""
"Read the Docs is a fully featured, free, documentation hosting service. "
"Some of its many features include:"
msgstr "Read the Docsは、完全な機能を備えた無料のドキュメントホスティングサービスです。 その多くの機能の一部を紹介します:"

#: ../../documentation/hosting-tools/publish-documentation-online.md:16
msgid ""
"Is free to host your documentation (but there are also paid tiers if you "
"wish to customize hosting)"
msgstr "ドキュメントのホスティングは無料です(ただし、ホスティングをカスタマイズしたい場合は、有料の階層もあります)"

#: ../../documentation/hosting-tools/publish-documentation-online.md:17
msgid "Automates building your documentation"
msgstr "ドキュメントの作成を自動化する"

#: ../../documentation/hosting-tools/publish-documentation-online.md:18
msgid ""
"Allows you to turn on integration with pull requests where you can view "
"documentation build progress (success vs failure)."
msgstr "プルリクエストとの統合を有効にすると、ドキュメントのビルドの進捗状況（成功か失敗か）を確認できます。"

#: ../../documentation/hosting-tools/publish-documentation-online.md:19
msgid ""
"Supports versioning of your documentation which allows users to refer to "
"older tagged versions of the docs if they are using older versions of "
"your package."
msgstr "ドキュメントのバージョン管理をサポートし、ユーザーが古いバージョンのパッケージを使用している場合、タグ付けされた古いバージョンのドキュメントを参照できるようにします。"

#: ../../documentation/hosting-tools/publish-documentation-online.md:20
msgid "Supports downloading of documentation in PDF and other formats."
msgstr "PDFやその他の形式のドキュメントのダウンロードに対応。"

#: ../../documentation/hosting-tools/publish-documentation-online.md:21
msgid ""
"You can customize the documentation build using a **.readthedocs.yaml** "
"file in your GitHub repository."
msgstr "ドキュメントのビルドは、GitHubリポジトリの **.readthedocs.yaml** ファイルを使ってカスタマイズできます。"

#: ../../documentation/hosting-tools/publish-documentation-online.md:24
msgid "What is GitHub Pages?"
msgstr "GitHub Pagesとは？"

#: ../../documentation/hosting-tools/publish-documentation-online.md:25
msgid ""
"[GitHub Pages](https://docs.github.com/en/pages/getting-started-with-"
"github-pages/about-github-pages) is a free web hosting service offered by"
" GitHub. Using GitHub pages, you can build your documentation locally or "
"using a Continuous Integration setup, and then push to a branch in your "
"GitHub repository that is setup to run the GitHub Pages web build."
msgstr ""
"[GitHub Pages](https://docs.github.com/en/pages/getting-started-with-"
"github-pages/about-github-pages) は GitHub が提供する無料のウェブホスティングサービスです。 GitHub"
" Pages を使えば、ローカルあるいは継続的インテグレーションを使ってドキュメントをビルドし、GitHub Pages "
"のウェブビルドを実行するように設定した GitHub リポジトリのブランチにプッシュすることができます。"

#: ../../documentation/hosting-tools/publish-documentation-online.md:33
msgid "Read the Docs vs GitHub Pages"
msgstr "Read the Docs vs GitHub Pages"

#: ../../documentation/hosting-tools/publish-documentation-online.md:35
msgid ""
"GitHub pages is a great option for your documentation deployment. "
"However, you will need to do a bit more work to build and deploy your "
"documentation if you use GitHub pages."
msgstr ""
"GitHub pages は、ドキュメントのデプロイに最適な選択肢です。 しかし、GitHub pages "
"を使う場合はドキュメントのビルドやデプロイに少し手間がかかります。"

#: ../../documentation/hosting-tools/publish-documentation-online.md:39
msgid ""
"Read the Docs can be setup in your Read the Docs user account. The "
"service automates the entire process of building and deploying your "
"documentation."
msgstr ""
"Read the Docsは、Read the Docsのユーザーアカウントで設定できます。 "
"このサービスは、ドキュメントの作成と配布の全プロセスを自動化します。"

#: ../../documentation/hosting-tools/publish-documentation-online.md:42
msgid ""
"If you don't want to maintain a documentation website for your Python "
"package, we suggest using the Read the Docs website."
msgstr "Pythonパッケージのドキュメントのウェブサイトを管理したくない場合は、Read the Docsウェブサイトを使うことをお勧めします。"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:1
msgid "Using Sphinx to Build Python Package Documentation"
msgstr "Sphinxを使ってPythonパッケージのドキュメントを作る"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:17
msgid ""
"On this page we discuss using [Sphinx](https://www.sphinx-doc.org/) to "
"build your user-facing package documentation. While Sphinx is currently "
"the most commonly-used tool in the scientific Python ecosystem, you are "
"welcome to explore other tools to build documentation such as "
"[mkdocs](https://www.mkdocs.org/) which is gaining popularity in the "
"Python packaging ecosystem."
msgstr ""
"このページでは、 [Sphinx](https://www.sphinx-doc.org/) "
"を使ってユーザー向けのパッケージのドキュメントをビルドする方法について説明します。 "
"Sphinxは科学的なPythonのエコシステムで現在最もよく使われているツールですが、Pythonのパッケージングエコシステムで人気を集めている"
" [mkdocs](https://www.mkdocs.org/) のような、ドキュメントをビルドするための他のツールを調べることも歓迎します。"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:25
msgid "Examples of documentation websites that we love:"
msgstr "私たちが気に入っているドキュメンテーションのウェブサイトの例:"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:27
msgid "[GeoPandas](https://geopandas.org/en/stable/)"
msgstr "[GeoPandas](https://geopandas.org/en/stable/)"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:28
msgid ""
"[View rst to create landing "
"page](https://raw.githubusercontent.com/geopandas/geopandas/main/doc/source/index.rst)"
msgstr "[ランディングページを作成するために最初にご覧ください](https://raw.githubusercontent.com/geopandas/geopandas/main/doc/source/index.rst)"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:29
msgid "[verde](https://www.fatiando.org/verde/latest/)"
msgstr "[verde](https://www.fatiando.org/verde/latest/)"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:30
msgid ""
"[View verde landing page code - rst "
"file.](https://github.com/fatiando/verde/blob/main/doc/index.rst)"
msgstr ""
"[verdeランディングページのコードを見る - "
"rstファイル](https://github.com/fatiando/verde/blob/main/doc/index.rst)"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:31
msgid ""
"[Here is our documentation if you want to see a myST example of a landing"
" page.](https://github.com/pyOpenSci/python-package-"
"guide/blob/main/index.md)"
msgstr ""
"[ランディングページのmyST例をご覧になりたい方は、こちらのドキュメントをご覧ください](https://github.com/pyOpenSci"
"/python-package-guide/blob/main/index.md)"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:34
msgid "Sphinx - a static site generator"
msgstr "Sphinx - 静的サイトジェネレーター"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:36
msgid ""
"Sphinx is a [static-site "
"generator](https://www.cloudflare.com/learning/performance/static-site-"
"generator/). A static site generator is a tool that creates html for a "
"website based upon a set of templates. The html files are then served "
"\"Statically\" which means that there is no generation or modification of"
" the files on the fly."
msgstr ""
"Sphinxは "
"[スタティックサイトジェネレーター](https://www.cloudflare.com/learning/performance"
"/static-site-generator/) です。 "
"静的サイトジェネレータとは、テンプレートのセットに基づいて、ウェブサイトのhtmlを作成するツールです。 "
"htmlファイルは「静的」に提供されるため、その場でファイルを生成したり変更したりすることはありません。"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:39
msgid "Sphinx is written using Python."
msgstr "SphinxはPythonで書かれています。"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:41
msgid "Sphinx sites can be customized using extensions and themes"
msgstr "Sphinxサイトは拡張機能やテーマを使ってカスタマイズできます"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:43
msgid ""
"The functionality of Sphinx can be extended using extensions and themes. "
"A few examples include:"
msgstr "Sphinxの機能は、エクステンションやテーマを使って拡張することができます。 いくつかの例があります:"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:46
msgid ""
"You can apply documentation themes for quick generation of beautiful "
"documentation."
msgstr "ドキュメントテーマを適用して、美しいドキュメントを素早く作成することができます。"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:47
msgid ""
"You can [automatically create documentation for your package's functions "
"and classes (the package's API) from docstrings in your code using the "
"autodoc extension](https://www.sphinx-"
"doc.org/en/master/usage/extensions/autodoc.html)"
msgstr ""
"[autodocエクステンションを使って、パッケージの関数やクラス(パッケージのAPI)のドキュメントをコードのdocstringから自動的に作成する](https://www"
".sphinx-doc.org/en/master/usage/extensions/autodoc.html) ことができます。"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:48
msgid ""
"You can [run and test code examples in your docstrings using the doctest "
"extension](https://www.sphinx-"
"doc.org/en/master/usage/extensions/doctest.html)"
msgstr ""
"doctestエクステンションを使って、docstringのコード例を [実行してテストする](https://www.sphinx-"
"doc.org/en/master/usage/extensions/doctest.html) ことができます。"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:49
msgid ""
"While Sphinx natively supports the `rST` syntax, you can add custom "
"syntax parsers to support easier-to-write syntax using tools such as [the"
" MyST parser](https://myst-parser.readthedocs.io/)."
msgstr ""
"[MySTパーサー](https://myst-parser.readthedocs.io/) "
"などのツールを使って、書きやすい構文をサポートするカスタム構文パーサーを追加できます。Sphinxはネイティブで `rST` "
"構文をサポートしています。"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:51
msgid "Commonly used Sphinx themes"
msgstr "よく使われるSphinxのテーマ"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:53
msgid ""
"You are free to use whatever Sphinx theme that you prefer. However, the "
"most common Sphinx themes used in the Python scientific community "
"include:"
msgstr ""
"あなたは好きなSphinxテーマを自由に使うことができます。 "
"しかし、Pythonの科学コミュニティで最もよく使われているSphinxのテーマは次のようなものです:"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:57
msgid "[pydata-sphinx-theme](https://pydata-sphinx-theme.readthedocs.io/)"
msgstr "[pydata-sphinx-theme](https://pydata-sphinx-theme.readthedocs.io/)"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:58
msgid "[sphinx-book-theme](https://sphinx-book-theme.readthedocs.io/)"
msgstr "[sphinx-book-theme](https://sphinx-book-theme.readthedocs.io/)"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:59
msgid "[furo](https://pradyunsg.me/furo/quickstart/)"
msgstr "[furo](https://pradyunsg.me/furo/quickstart/)"

#: ../../documentation/hosting-tools/sphinx-python-package-documentation-tools.md:63
msgid "This book is created using Sphinx and the `furo` theme."
msgstr "この本はSphinxと `furo` というテーマを使って作られています。"

#: ../../documentation/hosting-tools/website-hosting-optimizing-your-docs.md:1
msgid "Optimizing your documentation so search engines (and other users) find it"
msgstr "検索エンジン(および他のユーザー)に見つけてもらえるよう、ドキュメントを最適化する。"

#: ../../documentation/hosting-tools/website-hosting-optimizing-your-docs.md:3
msgid ""
"If you are interested in more people finding your package, you may want "
"to add some core Sphinx extensions (and theme settings) that will help "
"search engines such as Google find your documentation."
msgstr "もし、より多くの人にあなたのパッケージを見つけてもらいたいのであれば、Sphinxのコアとなる拡張機能(およびテーマの設定)を追加することで、Googleなどの検索エンジンがあなたのドキュメントを見つけやすくすることができます。"

#: ../../documentation/hosting-tools/website-hosting-optimizing-your-docs.md:7
msgid "Google Analytics"
msgstr "Google アナリティクス"

#: ../../documentation/hosting-tools/website-hosting-optimizing-your-docs.md:11
msgid ""
"Google analytics [is not compliant with the European General Data "
"Protection Regulation (GDPR)](https://matomo.org/blog/2022/05/google-"
"analytics-4-gdpr/). While there are many components to this regulation, "
"one of the core elements is that you have to let users know on your site "
"that you are collecting data and they have to consent. While it is "
"possible to add infrastructure around Google Analytics to make it close "
"to following GDPR regulations, the community is slowly shifting away from"
" Google using open tools such as [Plausible](https://plausible.io/), "
"[Cloudflare Web Analytics](https://www.cloudflare.com/web-analytics/) and"
" [Matomo](https://matomo.org) for web analytics."
msgstr ""
"Googleアナリティクスは "
"[欧州一般データ保護規則（GDPR）に準拠していません](https://matomo.org/blog/2022/05/google-"
"analytics-4-gdpr/) "
"。この規制には多くの要素があるが、核となる要素のひとつは、データを収集していることをサイト上でユーザーに知らせ、同意を得なければならないということです。Googleアナリティクスの周辺にインフラを追加してGDPRの規制に沿うようにすることは可能ですが、コミュニティは徐々にGoogleから"
" [Plausible](https://plausible.io/) 、 [Cloudflare Web "
"Analytics](https://www.cloudflare.com/web-analytics/) 、 "
"[Matomo](https://matomo.org) といったオープンツールをウェブ解析に使う方向にシフトしつつあります。"

#: ../../documentation/hosting-tools/website-hosting-optimizing-your-docs.md:13
msgid ""
"pyOpenSci is currently looking into free options for open source "
"developers."
msgstr "pyOpenSci は現在、オープンソース開発者のための無料のオプションを検討しています。"

#: ../../documentation/hosting-tools/website-hosting-optimizing-your-docs.md:16
msgid ""
"Some of the [sphinx themes such as the `pydata-sphinx-theme` and sphinx-"
"book-theme have built in support for Google Analytics](https://pydata-"
"sphinx-theme.readthedocs.io/en/latest/user_guide/analytics.html#google-"
"analytics). However, if the theme that you chose does not offer Google "
"Analytics support, you can use the [`sphinxcontrib-gtagjs` "
"extension](https://github.com/attakei/sphinxcontrib-gtagjs). This "
"extension will add a Google Analytics site tag to each page of your "
"documentation."
msgstr ""
"[`pydata-sphinx-theme`や `sphinx-book-theme` のようなsphinxテーマには、Google "
"Analyticsのサポートが組み込まれています](https://pydata-sphinx-"
"theme.readthedocs.io/en/latest/user_guide/analytics.html#google-"
"analytics) 。しかし、もしあなたが選んだテーマがGoogle Analyticsをサポートしていない場合は、 "
"[sphinxcontrib-gtagjs` extension](https://github.com/attakei"
"/sphinxcontrib-gtagjs) を使うことができます。 このエクステンションは、Google "
"Analyticsのサイトタグをドキュメントの各ページに追加します。"

#: ../../documentation/hosting-tools/website-hosting-optimizing-your-docs.md:22
msgid ""
"[sphinx-sitemap](https://sphinx-"
"sitemap.readthedocs.io/en/latest/index.html) for search engine "
"optimization"
msgstr ""
"検索エンジン最適化のための [sphinx-sitemap](https://sphinx-"
"sitemap.readthedocs.io/en/latest/index.html)"

#: ../../documentation/hosting-tools/website-hosting-optimizing-your-docs.md:24
msgid ""
"While we are trying to move away from Google Analytics do to compliance "
"and privacy issues, search engine optimization is still important. Google"
" is the most popular search engine. And if your documentation is search "
"optimized, users are more likely to find your package!"
msgstr ""
"コンプライアンスやプライバシーの問題からGoogleアナリティクスから離れようとしていますが、検索エンジン最適化は依然として重要です。 "
"Googleは最も人気のある検索エンジンです。 "
"そして、もしあなたのドキュメントが検索に最適化されていれば、ユーザーはあなたのパッケージを見つける可能性が高くなります!"

#: ../../documentation/hosting-tools/website-hosting-optimizing-your-docs.md:30
msgid ""
"If you are interested in optimizing your documentation for search engines"
" such as Google, you want a **sitemap.xml** file. You can submit this "
"sitemap to Google and it will index your entire site. This over time can "
"make the content on your site more visible to others when they search."
msgstr ""
"Googleのような検索エンジンのために文書を最適化することに興味があるなら、 **sitemap.xml** ファイルが必要です。 "
"このサイトマップをGoogleに送信すると、Googleはあなたのサイト全体をインデックスします。 "
"このサイトマップをGoogleに送信することで、サイト全体がインデックスされ、サイト内のコンテンツが検索されやすくなります。"

#: ../../documentation/hosting-tools/website-hosting-optimizing-your-docs.md:36
msgid "This extension is lightweight."
msgstr "このエクステンションは軽量です。"

#: ../../documentation/hosting-tools/website-hosting-optimizing-your-docs.md:38
msgid ""
"It [requires that you to add it to your Sphinx `conf.py` extension list "
"and site your documentation base url](https://sphinx-"
"sitemap.readthedocs.io/en/latest/getting-started.html)."
msgstr ""
"これは、 [Sphinxの `conf.py` 拡張機能リストに追加し、ドキュメントのベースURLを指定する必要があります](https"
"://sphinx-sitemap.readthedocs.io/en/latest/getting-started.html) 。"

#: ../../documentation/hosting-tools/website-hosting-optimizing-your-docs.md:40
msgid "[sphinxext.opengraph](https://github.com/wpilibsuite/sphinxext-opengraph)"
msgstr "[sphinxext.opengraph](https://github.com/wpilibsuite/sphinxext-opengraph)"

#: ../../documentation/hosting-tools/website-hosting-optimizing-your-docs.md:42
msgid ""
"OpenGraph is an extension that allows you to add metadata to your "
"documentation content pages. [The OpenGraph protocol allows other "
"websites to provide a useful preview of the content on your page when "
"shared](https://www.freecodecamp.org/news/what-is-open-graph-and-how-"
"can-i-use-it-for-my-website/#heading-what-is-open-graph). This is "
"important for when the pages in your documentation are shared on social "
"media sites like Twitter and Mastodon and even for shares on tools like "
"Slack and Discourse."
msgstr ""
"OpenGraphは、ドキュメントのコンテンツページにメタデータを追加できる拡張機能です。 "
"[OpenGraphプロトコルは、共有されたときに他のウェブサイトがあなたのページのコンテンツの有用なプレビューを提供することを可能にします](https://www.freecodecamp.org/news"
"/what-is-open-graph-and-how-can-i-use-it-for-my-website/#heading-what-is-"
"open-graph) 。 "
"これは、あなたのドキュメントのページがTwitterやMastodonのようなソーシャルメディアサイトで共有されるときや、SlackやDiscourseのようなツールで共有されるときにも重要です。"

#: ../../documentation/index.md:3
msgid "Documentation Overview"
msgstr "ドキュメントの概要"

#: ../../documentation/index.md:3 ../../documentation/index.md:10
#: ../../documentation/index.md:21 ../../documentation/index.md:42
msgid "Intro"
msgstr "イントロ"

#: ../../documentation/index.md:10
msgid "Create Your Docs"
msgstr "ドキュメントの作成"

#: ../../documentation/index.md:10
msgid "Document Your Code (API)"
msgstr "コードを文書化する(API)"

#: ../../documentation/index.md:10
msgid "Create Package Tutorials"
msgstr "チュートリアルパッケージの作成"

#: ../../documentation/index.md:10
msgid "Write User Documentation"
msgstr "ユーザードキュメントの作成"

#: ../../documentation/index.md:21
msgid "Contributing File"
msgstr "貢献ファイル"

#: ../../documentation/index.md:21
msgid "Development Guide"
msgstr "開発ガイド"

#: ../../documentation/index.md:21
msgid "Changelog File"
msgstr "変更履歴ファイル"

#: ../../documentation/index.md:21
msgid "Docs for Contributors & Maintainers"
msgstr "コントリビューターとメンテナーのためのドキュメント"

#: ../../documentation/index.md:32
msgid "README file"
msgstr "README ファイル"

#: ../../documentation/index.md:32
msgid "Code of Conduct File"
msgstr "行動規範ファイル"

#: ../../documentation/index.md:32
msgid "LICENSE files"
msgstr "ライセンスファイル"

#: ../../documentation/index.md:32
msgid "Community Docs"
msgstr "コミュニティドキュメント"

#: ../../documentation/index.md:42
msgid "Sphinx for Docs"
msgstr "ドキュメント用Sphinx"

#: ../../documentation/index.md:42
msgid "myST vs Markdown vs rst"
msgstr "myST vs Markdown vs rst"

#: ../../documentation/index.md:42
msgid "Publish Your Docs"
msgstr "ドキュメントを公開する"

#: ../../documentation/index.md:42
msgid "Website Hosting and Optimization"
msgstr "ウェブサイトのホスティングと最適化"

#: ../../documentation/index.md:42
msgid "Publication tools for your docs"
msgstr "ドキュメント出版ツール"

#: ../../documentation/index.md:1
msgid "Documentation for your Open Source Python Package"
msgstr "オープンソースPythonパッケージのドキュメント"

#: ../../documentation/index.md:55
msgid ""
"Please note that the tools discussed here are those that we see commonly "
"used in the community. As tools evolve we will update this guide. If you "
"are submitting a package for pyOpenSci peer review and use other tools "
"that are not listed in our guide to build your package you can still "
"submit for review! The tools listed here are suggestions, not "
"requirements. Our requirements are focused on the documentation content "
"of your package."
msgstr ""
"ここで取り上げているツールは、コミュニティで一般的に使用されているものです。 ツールの進化に伴い、このガイドを更新します。 "
"pyOpenSci査読のためにパッケージを提出し、パッケージを構築するためにガイドに記載されていない他のツールを使用する場合でも、査読のために提出することができます！"
" ここに挙げたツールは提案であり、要件ではありません。 私たちの要求は、あなたのパッケージの文書内容に焦点を当てています。"

#: ../../documentation/index.md:65
msgid "Documentation is critical for your Python package's success"
msgstr "Pythonパッケージの成功にはドキュメンテーションが欠かせません"

#: ../../documentation/index.md:67
msgid ""
"Documentation is as important to the success of your Python open source "
"package as the code itself."
msgstr "ドキュメンテーションは、あなたのPythonオープンソースパッケージの成功にとって、コードそのものと同じくらい重要です。"

#: ../../documentation/index.md:70
msgid ""
"Quality code is of course valuable as its how your package gets the tasks"
" done. However, if users don't understand how to use your package in "
"their workflows, then they won't use it."
msgstr ""
"もちろん、パッケージがどのようにタスクを遂行するかという点で、質の高いコードは価値があります。 "
"しかし、もしユーザーがワークフローであなたのパッケージの使い方を理解していなければ、使ってもらえないでしょう。"

#: ../../documentation/index.md:73
msgid ""
"Further, explicitly documenting how to contribute is important if you "
"wish to build a base of contributors to your package."
msgstr "さらに、どのように貢献するかを明確に文書化することは、あなたのパッケージへの貢献者の基盤を築きたいのであれば重要です。"

#: ../../documentation/index.md:76
msgid "Two types of Python package users"
msgstr "Pythonパッケージユーザーの2つのタイプ"

#: ../../documentation/index.md:78
msgid ""
"The documentation that you write for your package should target two types"
" of users:"
msgstr "パッケージのために書くドキュメントは、2つのタイプのユーザーをターゲットにすべきです:"

#: ../../documentation/index.md:81
msgid "1. Basic Tool Users"
msgstr "1. 基本ツールユーザー"

#: ../../documentation/index.md:83
msgid ""
"Basic tool users are the people who will use your package code in their "
"Python workflows. They might be new(er) to Python and/or data science. Or"
" expert programmers. But they might not have a background in software "
"development. These users need to know:"
msgstr ""
"基本ツールユーザーは、あなたのパッケージコードを Python ワークフローで使用する人たちです。 "
"彼らはPythonやデータサイエンスの(より)初心者かもしれません。 あるいは熟練プログラマーかもしれません。 "
"しかし、彼らはソフトウェア開発のバックグラウンドを持っていないかもしれません。 このようなユーザーは以下のことを知っておく必要があります:"

#: ../../documentation/index.md:88
msgid "How to install your package"
msgstr "パッケージのインストール方法"

#: ../../documentation/index.md:89
msgid "How to install dependencies that your package requires"
msgstr "パッケージが必要とする依存関係をインストールする方法"

#: ../../documentation/index.md:90
msgid "How to get started using the code base"
msgstr "コードベースの使い始め方"

#: ../../documentation/index.md:91
msgid ""
"Information on how to cite your code / give you credit if they are using "
"it in a research application."
msgstr "研究用アプリケーションでコードを使用する場合、あなたのコードをどのように引用し、クレジットを付与するかについての情報。"

#: ../../documentation/index.md:93
msgid ""
"Information on the license that your code uses so they know how they can "
"or can't use the code in an operational setting."
msgstr "あなたのコードが使用するライセンスに関する情報を提供することで、運用環境においてコードをどのように使用できるか、または使用できないかを知ってもらいます。"

#: ../../documentation/index.md:96
msgid "2. Potential tool contributors"
msgstr "2. ツールコントリビュータ候補"

#: ../../documentation/index.md:98
msgid ""
"The other subset of users are more experienced and/or more engaged with "
"your package. As such they are potential contributors. These users:"
msgstr "もう一組のユーザは、経験が豊富で、かつ/またはあなたのパッケージにより深く関わっています。 彼らは潜在的な貢献者です。 これらのユーザーは:"

#: ../../documentation/index.md:102
msgid "might have a software development background,"
msgstr "ソフトウェア開発のバックグラウンドを持っているかもしれない、"

#: ../../documentation/index.md:103
msgid ""
"might also be able to contribute bug fixes to your package or updates to "
"your documentation"
msgstr "また、パッケージのバグフィックスやドキュメントの更新に貢献できるかもしれません。"

#: ../../documentation/index.md:104
msgid ""
"might also just be users who will find spelling errors in your "
"documentation, or bugs in your tutorials."
msgstr "また、ドキュメントのスペルミスやチュートリアルのバグを見つけるユーザーもいるかもしれません。"

#: ../../documentation/index.md:106
msgid ""
"These users need all of the things that a basic user needs. But, they "
"also need to understand how you'd like for them to contribute to your "
"package. These potential contributors need:"
msgstr ""
"これらのユーザーは、基本的なユーザーが必要とするすべてのものを必要としています。 "
"しかし、彼らがあなたのパッケージにどのように貢献してほしいかを理解する必要もあります。 このような貢献者候補には、次のようなものが必要です:"

#: ../../documentation/index.md:110
msgid ""
"A development guide to help them understand the infrastructure used in "
"your package repository."
msgstr "パッケージリポジトリで使われているインフラを理解するための開発ガイドです。"

#: ../../documentation/index.md:111
msgid ""
"Contributing guidelines that clarify the types of contributions that you "
"welcome and how you'd prefer those contributions to be submitted."
msgstr "どのような貢献の投稿を歓迎し、どのように貢献をしてほしいかを明確にした貢献ガイドライン。"

#: ../../documentation/index.md:114
msgid ""
"It's important to remember that the definition of what a contribution is "
"can be broad. A contribution could be something as simple as a bug "
"report. Or fixing a spelling issue in your documentation. Or it could be "
"a code fix that includes a new test that covers an edge-case that they "
"discovered."
msgstr "重要なのは、貢献の定義は幅広いということを覚えておくことです。貢献とは、バグ報告のような単純なものでもよいのです。あるいは、ドキュメントのスペルの問題を修正する。あるいは、彼らが発見したエッジケースをカバーする新しいテストを含むコード修正かもしれません。"

#: ../../documentation/index.md:120
msgid "Documentation elements that pyOpenSci looks for reviewing a Python package"
msgstr "pyOpenSciがPythonパッケージをレビューする際に注目するドキュメント要素"

#: ../../documentation/index.md:122
msgid ""
"In the pyOpenSci open peer review, we look for a documentation structure "
"that supports both your tool users and potential contributors. The files "
"and elements that we look for specifically can be found in our peer "
"review check list (see link below)."
msgstr "pyOpenSciオープンピアレビューでは、あなたのツールのユーザーと潜在的な貢献者の両方をサポートする文書構造を探します。私たちが特にチェックするファイルや要素は、査読チェックリスト（下記リンク参照）に記載されています。"

#: ../../documentation/index.md:127
msgid ""
"In this guide, we discuss each required element, and also discuss other "
"elements that you should consider in your package's documentation in more"
" detail."
msgstr "このガイドでは、各必須要素について説明し、パッケージの文書で考慮すべきその他の要素についても詳しく説明します。"

#: ../../documentation/index.md:131
msgid "View pyOpenSci peer review check list"
msgstr "pyOpenSci査読チェックリストを見る"

#: ../../documentation/index.md:138
msgid ""
"Image showing the files in the the MovingPandas GitHub repository. Files "
"in the image include code of conduct.md contributing.md license.txt and "
"readme.md."
msgstr ""
"MovingPandasのGitHubリポジトリにあるファイルを示す画像。画像内のファイルには、code of conduct.md "
"contributing.md license.txtとreadme.mdが含まれています。"

#: ../../documentation/index.md:144
msgid ""
"An example from the MovingPandas GitHub repository with all of the major "
"files in it including CONTRIBUTING.md, README.md, CODE_OF_CONDUCT.md and "
"a LICENSE.txt file. *(screen shot taken Nov 23 2022)*"
msgstr ""
"MovingPandasのGitHubリポジトリから、CONTRIBUTING.md、README.md、CODE_OF_CONDUCT.md、LICENSE.txtを含む主要なファイルを抜粋。"
" *( スクリーンショットは2022年11月23日撮影 )* 。"

#: ../../documentation/index.md:147
msgid "What's next in this Python package documentation section?"
msgstr "このPythonパッケージのドキュメントセクションの次は何でしょうか？"

#: ../../documentation/index.md:149
msgid ""
"In this section of the pyOpenSci package guide, we will walk you through "
"best practices for setting up documentation for your Python package. We "
"will also suggest tools that you can use to build your user-facing "
"documentation website."
msgstr ""
"pyOpenSciパッケージガイドのこのセクションでは、Pythonパッケージのドキュメントを設定するためのベストプラクティスを説明します。 "
"また、ユーザー向けのドキュメントサイトを構築するために使用できるツールも提案します。"

#: ../../documentation/index.md:154
msgid "Todo"
msgstr "Todo"

#: ../../documentation/index.md:156
msgid ""
"Python version support You should always be explicit about which versions"
" of Python your package supports. Keeping compatibility with old Python "
"versions can be difficult as functionality changes. A good rule of thumb "
"is that the package should support, at least, the latest three Python "
"versions (e.g., 3.8, 3.7, 3.6)."
msgstr ""
"Pythonのバージョンサポート あなたのパッケージがどのバージョンのPythonをサポートしているか、常に明示しておくべきです。 "
"Pythonの古いバージョンとの互換性を保つことは、機能が変わるにつれて難しくなります。 "
"良い経験則として、パッケージは少なくとも最新の3つのPythonバージョン（例えば、3.8、3.7、3.6）をサポートするべきです。"

#: ../../documentation/repository-files/changelog-file.md:1
msgid "CHANGELOG.md Guide"
msgstr "CHANGELOG.md ガイド"

#: ../../documentation/repository-files/changelog-file.md:3
msgid "Introduction"
msgstr "はじめに"

#: ../../documentation/repository-files/changelog-file.md:5
msgid ""
"The `CHANGELOG.md` document serves as a valuable resource for developers "
"and users alike to track the evolution of a project over time. "
"Understanding the structure and purpose of a changelog helps users and "
"contributors stay informed about new features, bug fixes, and other "
"changes introduced in each release."
msgstr ""
"`CHANGELOG.md` ドキュメントは、開発者にとってもユーザーにとっても、プロジェクトの進化を追跡するための貴重なリソースとなります。 "
"変更履歴の構造と目的を理解することで、ユーザーや貢献者は各リリースで導入された新機能やバグ修正、その他の変更について常に情報を得ることができます。"

#: ../../documentation/repository-files/changelog-file.md:7
msgid "What is CHANGELOG.md?"
msgstr "CHANGELOG.mdとは？"

#: ../../documentation/repository-files/changelog-file.md:9
msgid ""
"The primary purpose of `CHANGELOG.md` is to provide a record of notable "
"changes made to the project with each new release. This document helps "
"users understand what has been added, fixed, modified, or removed with "
"each version of the software."
msgstr ""
"`CHANGELOG.md` の主な目的は、新しいリリースごとにプロジェクトに加えられた注目すべき変更の記録を提供することです。 "
"このドキュメントは、ソフトウェアの各バージョンで何が追加、修正、変更、削除されたかをユーザーが理解するのに役立ちます。"

#: ../../documentation/repository-files/changelog-file.md:11
msgid ""
"[Keep a CHAGELOG.md](https://keepachangelog.com/en/1.1.0/) is a great, "
"simple resource for understanding what a changelog is and how to create a"
" good changelog. It also includes examples of things to avoid."
msgstr ""
"[Keep a "
"CHAGELOG.md](https://keepachangelog.com/en/1.1.0/)は、変更ログとは何か、どのように良い変更ログを作成するかを理解するための、シンプルで素晴らしいリソースです。"
" また、避けるべきことの例も含まれています。"

#: ../../documentation/repository-files/changelog-file.md:13
msgid "Versioning your Python package and semantic versioning"
msgstr "Pythonパッケージのバージョン管理とセマンティックバージョニング"

#: ../../documentation/repository-files/changelog-file.md:16
msgid ""
"An important component of a package that serves as the backbone behind "
"the changelog file is a good versioning scheme. Semantic Versioning is "
"widely used across Python packages."
msgstr ""
"変更履歴ファイルのバックボーンとなるパッケージの重要なコンポーネントは、優れたバージョン管理スキームです。 セマンティック・バージョニングは "
"Python パッケージ全体で広く使われています。"

#: ../../documentation/repository-files/changelog-file.md:17
msgid ""
"[Creating New Versions of Your Python Package](../../package-structure-"
"code/python-package-versions.md)"
msgstr ""
"[Python パッケージの新しいバージョンの作成](../../package-structure-code/python-package-"
"versions.md)"

#: ../../documentation/repository-files/changelog-file.md:18
msgid "[Semantic Versioning](https://semver.org)"
msgstr "[セマンティック バージョニング](https://semver.org)"

#: ../../documentation/repository-files/changelog-file.md:21
msgid "Why is it important?"
msgstr "なぜそれが重要なのか？"

#: ../../documentation/repository-files/changelog-file.md:23
msgid ""
"A well-maintained changelog is essential for transparent communication "
"with users and developers. It serves as a centralized hub for documenting"
" changes and highlights the progress made in each release. By keeping the"
" changelog up-to-date, project maintainers can build trust with their "
"user base and demonstrate their commitment to improving the software."
msgstr ""
"ユーザーや開発者との透明性のあるコミュニケーションには、よく管理された変更履歴が不可欠です。 "
"変更ログは、変更点を文書化し、各リリースでの進捗をハイライトするための一元的なハブとして機能します。 "
"変更履歴を常に最新の状態に保つことで、プロジェクトメンテナはユーザーベースとの信頼を築き、ソフトウェアを改善するというコミットメントを示すことができます。"

#: ../../documentation/repository-files/changelog-file.md:25
msgid "What does it include?"
msgstr "その内容は？"

#: ../../documentation/repository-files/changelog-file.md:27
msgid ""
"The contents of a changelog.md file typically follow a structured format,"
" detailing the changes introduced in each release. While the exact format"
" may vary depending on the project's conventions, some common elements "
"found in changelogs for Python packages include:"
msgstr ""
"changelog.md ファイルの内容は一般的に構造化されたフォーマットに従い、各リリースで導入された変更の詳細を記述します。 "
"正確なフォーマットはプロジェクトの規約によって異なるかもしれませんが、 Python パッケージの changelog "
"でよく見られる要素には以下のようなものがあります："

#: ../../documentation/repository-files/changelog-file.md:29
msgid ""
"**Versioning**: Clear identification of each release version using "
"semantic versioning or another versioning scheme adopted by the project."
msgstr ""
"**Versioning**： "
"セマンティックバージョニング、またはプロジェクトが採用するその他のバージョニングスキームを使って、各リリースのバージョンを明確に識別すること。"

#: ../../documentation/repository-files/changelog-file.md:31
msgid ""
"**Release Date**: The date when each version was released to the public, "
"providing context for the timeline of changes."
msgstr "**Release Date**: 各バージョンが公開された日付で、変更のタイムラインのコンテキストを提供します。"

#: ../../documentation/repository-files/changelog-file.md:33
msgid ""
"**Change Categories**: Organizing changes into categories such as "
"\"Added,\" \"Changed,\" \"Fixed,\" and \"Removed\" to facilitate "
"navigation and understanding."
msgstr ""
"**変更カテゴリー**: 変更を \"Added,\" \"Changed,\" \"Fixed,\" \"Removed\" "
"などのカテゴリーに整理し、ナビゲーションと理解を容易にします。"

#: ../../documentation/repository-files/changelog-file.md:35
msgid ""
"**Description of Changes**: A concise description of the changes made in "
"each category, including new features, enhancements, bug fixes, and "
"deprecated functionality."
msgstr "**変更の内容**: 新機能、機能強化、バグフィックス、非推奨機能を含む、各カテゴリーにおける変更点の簡潔な説明。"

#: ../../documentation/repository-files/changelog-file.md:37
msgid ""
"**Links to Issues or Pull Requests**: References to relevant issue "
"tracker items or pull requests associated with each change, enabling "
"users to access more detailed information if needed."
msgstr ""
"**課題またはプルリクエストへのリンク**: "
"各変更に関連する課題追跡項目またはプルリクエストへの参照で、ユーザーは必要に応じてより詳細な情報にアクセスできます。"

#: ../../documentation/repository-files/changelog-file.md:39
msgid ""
"**Upgrade Instructions**: Guidance for users on how to upgrade to the "
"latest version, including any breaking changes or migration steps they "
"need to be aware of."
msgstr "**アップグレード手順**: 最新バージョンへのアップグレード方法に関するガイダンス、注意すべき変更点や移行手順を含みます。"

#: ../../documentation/repository-files/changelog-file.md:41
msgid ""
"**Contributor Recognition**: Acknowledgment of contributors who made "
"significant contributions to the release, fostering a sense of community "
"and appreciation for their efforts."
msgstr "**コントリビューターの認識**: リリースに多大な貢献をした貢献者を認識し、彼らの努力に対する感謝の気持ちと共同体意識を醸成します。"

#: ../../documentation/repository-files/changelog-file.md:43
msgid "How do maintainers use it?"
msgstr "メンテナーはどのように使っているのか？"

#: ../../documentation/repository-files/changelog-file.md:45
msgid "Often you will see a changelog that documents a few things:"
msgstr "多くの場合、変更履歴を見ることができます:"

#: ../../documentation/repository-files/changelog-file.md:47
msgid "Unreleased Section"
msgstr "未リリースセクション"

#: ../../documentation/repository-files/changelog-file.md:49
msgid ""
"Unreleased commits are at the top of the changelog, commonly in an "
"`Unreleased` section. This is where you can add new fixes, updates and "
"features that have been added to the package since the last release."
msgstr ""
"未リリースのコミットは変更履歴の一番上にあり、一般的には `Unreleased` セクションにあります。 "
"ここには、前回のリリース以降にパッケージに追加された新しい修正、更新、機能を追加することができます。"

#: ../../documentation/repository-files/changelog-file.md:51
msgid "This section might look something like this:"
msgstr "このセクションは次のようなものです:"

#: ../../documentation/repository-files/changelog-file.md:59
msgid "Release Sections"
msgstr "リリースセクション"

#: ../../documentation/repository-files/changelog-file.md:61
msgid ""
"When you are ready to make a new release, you can move the elements into "
"a section that is specific to that new release number."
msgstr "新しいリリースを作る準備ができたら、要素をその新しいリリース番号専用のセクションに移動させることができます。"

#: ../../documentation/repository-files/changelog-file.md:63
msgid ""
"This specific release section will sit below the unreleased section and "
"can include any updates, additions, deprecations and contributors."
msgstr "この特定のリリースセクションは、未リリースセクションの下に位置し、更新、追加、非推奨、貢献者を含むことができます。"

#: ../../documentation/repository-files/changelog-file.md:65
msgid ""
"The unreleased section then always lives at the top of the file and new "
"features continue to be added there. At the same time, after releasing a "
"version like v1.0 all of its features remain in that specific section."
msgstr ""
"未発表のセクションは常にファイルの一番上にあり、新しい機能はそこに追加され続けます。 "
"同時に、v1.0のようなバージョンをリリースした後も、すべての機能はその特定のセクションに残ります。"

#: ../../documentation/repository-files/changelog-file.md:83
msgid "What does it look like?"
msgstr "それはどのようなものですか？"

#: ../../documentation/repository-files/changelog-file.md:85
msgid ""
"This example comes from [Devicely](https://github.com/hpi-"
"dhc/devicely/blob/main/CHANGELOG.md), a pyOpenSci accepted package."
msgstr ""
"この例はpyOpenSci受諾パッケージの [Devicely](https://github.com/hpi-"
"dhc/devicely/blob/main/CHANGELOG.md) から来ています。"

#: ../../documentation/repository-files/code-of-conduct-file.md:3
msgid "The CODE_OF_CONDUCT file - Python Packaging"
msgstr "CODE_OF_CONDUCT ファイル - Python Packaging"

#: ../../documentation/repository-files/code-of-conduct-file.md:5
msgid "Example CODE_OF_CONDUCT files"
msgstr "CODE_OF_CONDUCT ファイルの例"

#: ../../documentation/repository-files/code-of-conduct-file.md:8
msgid ""
"[SciPy Code of Conduct file - notice they included theirs in their "
"documentation](https://docs.scipy.org/doc/scipy/dev/conduct/code_of_conduct.html)"
msgstr ""
"[SciPyの行動規範ファイル - "
"彼らのドキュメントに含まれていることに注目](https://docs.scipy.org/doc/scipy/dev/conduct/code_of_conduct.html)"

#: ../../documentation/repository-files/code-of-conduct-file.md:9
msgid ""
"[fatiando CODE_OF_CONDUCT.md "
"file](https://github.com/fatiando/community/blob/main/CODE_OF_CONDUCT.md)"
msgstr "[fatiandoのCODE_OF_CONDUCT.mdファイル](https://github.com/fatiando/community/blob/main/CODE_OF_CONDUCT.md)"

#: ../../documentation/repository-files/code-of-conduct-file.md:12
msgid ""
"Your package should have a `CODE_OF_CONDUCT.md` file located the root of "
"the repository. Once you have people using your package, you can consider"
" the package itself as having a community around it. Some of this "
"community uses your tool. These users may have questions or encounter "
"challenges using your package."
msgstr ""
"あなたのパッケージには、リポジトリのルートに `CODE_OF_CONDUCT.md` ファイルがあるはずです。 "
"あなたのパッケージを使っている人がいれば、そのパッケージ自体にコミュニティがあると考えることができます。 "
"このコミュニティの一部は、あなたのツールを使っています。 "
"このようなユーザは、あなたのパッケージを使用する際に質問をしたり、問題に遭遇するかもしれません。"

#: ../../documentation/repository-files/code-of-conduct-file.md:18
msgid ""
"Others in the community might want to contribute to your tool. They might"
" fix bugs, update documentation and engage with the maintainer team."
msgstr ""
"コミュニティの他の人たちも、あなたのツールに貢献したいと思うかもしれません。 "
"バグを修正したり、ドキュメントを更新したり、メンテナチームと関わりを持ったりするかもしれません。"

#: ../../documentation/repository-files/code-of-conduct-file.md:22
msgid "Why you need a CODE_OF_CONDUCT"
msgstr "CODE_OF_CONDUCTが必要な理由"

#: ../../documentation/repository-files/code-of-conduct-file.md:24
msgid ""
"In order to keep this community healthy and to protect yourself, your "
"maintainer team and your users from unhealthy behavior, it is important "
"to have a [`CODE_OF_CONDUCT`](https://opensource.guide/code-of-conduct/)."
msgstr ""
"このコミュニティを健全に保ち、あなた自身、あなたのメンテナチーム、そしてユーザーを不健全な行動から守るためには、 "
"[`CODE_OF_CONDUCT`](https://opensource.guide/code-of-conduct/) "
"を持つことが重要です。"

#: ../../documentation/repository-files/code-of-conduct-file.md:28
msgid ""
"The `CODE_OF_CONDUCT` is important as it establishes what you expect in "
"terms of how users and contributors interact with maintainers and each "
"other. It also establishes rules and expectations which can then be "
"enforced if need be to protect others from harmful and/or negative "
"behaviors."
msgstr ""
"`CODE_OF_CONDUCT` "
"は、利用者や貢献者がメンテナや他の利用者とどのように交流するかという点で、あなたが期待することを定めるものとして重要です。 "
"また、有害な行動や否定的な行動から他の人を守るために、必要であれば強制することができる規則や期待も確立します。"

#: ../../documentation/repository-files/code-of-conduct-file.md:34
msgid ""
"If you are not comfortable with creating your own `CODE_OF_CONDUCT` text,"
" we encourage you to adopt the `CODE_OF_CONDUCT` language used in the "
"[Contributor Covenant](https://www.contributor-"
"covenant.org/version/2/1/code_of_conduct/). [Many other "
"communities](https://www.contributor-covenant.org/adopters/) have adopted"
" this `CODE_OF_CONDUCT` as their own. See the [Fatiando a Terra "
"Geoscience Python community's example "
"here.](https://github.com/fatiando/community/blob/main/CODE_OF_CONDUCT.md)"
msgstr ""
"あなた自身の `CODE_OF_CONDUCT` の文章を作成することに抵抗がある場合、 [Contributor "
"Covenant](https://www.contributor-"
"covenant.org/version/2/1/code_of_conduct/) で使用されている `CODE_OF_CONDUCT` "
"の文言を採用することをお勧めします。 [他の多くのコミュニティ](https://www.contributor-"
"covenant.org/adopters/) はこの `CODE_OF_CONDUCT` を自分たちのものとして採用しています。 "
"[Fatiando Terra Geoscience "
"Pythonコミュニティの例はこちら](https://github.com/fatiando/community/blob/main/CODE_OF_CONDUCT.md)"
" を参照してください。"

#: ../../documentation/repository-files/contributing-file.md:2
msgid "Your Python Package CONTRIBUTING File"
msgstr "あなたのPythonパッケージのCONTRIBUTINGファイル"

#: ../../documentation/repository-files/contributing-file.md:4
msgid ""
"The **CONTRIBUTING.md** is the landing page guide for your project's "
"contributors. It outlines how contributors can get involved, the "
"contribution types that you welcome, and how contributors should interact"
" or engage with you and your maintainer team. The contributor guide "
"should also link to get-started resources that overview how to set up "
"development environments, what type of workflow you expect on "
"GitHub/GitLab, and anything else that contributors might need to get "
"started."
msgstr ""
"**CONTRIBUTING.md** "
"は、あなたのプロジェクトの貢献者のためのランディングページガイドです。貢献者の参加方法、歓迎する貢献の種類、貢献者があなたやメンテナチームとどのように関わり合うべきかについて概説しています。コントリビューターガイドは、開発環境のセットアップ方法や、GitHub/GitLabでどのようなワークフローを想定しているかなど、コントリビューターが始めるために必要なことをまとめたスタートアップリソースにもリンクしておくべきです。"

#: ../../documentation/repository-files/contributing-file.md:6
msgid ""
"This file benefits maintainers and contributors. For contributors, it "
"provides a roadmap that helps them get started and makes their first "
"contribution easier. For maintainers, it answers commonly asked questions"
" and reduces the burden of explaining your process to every person who "
"wants to contribute. This document creates a more collaborative and "
"efficient development process for everyone."
msgstr ""
"このファイルは、メンテナと貢献者に利益をもたらします。コントリビューターにとっては、最初のコントリビューションを容易にするためのロードマップとなります。"
" "
"メンテナにとっては、よくある質問に答え、貢献したいすべての人にあなたのプロセスを説明する負担を減らすことができます。この文書は、すべての人にとって、より協力的で効率的な開発プロセスを生み出します。"

#: ../../documentation/repository-files/contributing-file.md:8
msgid "CONTRIBUTING files lower barriers to entry"
msgstr "参入障壁の低減に CONTRIBUTING ファイル"

#: ../../documentation/repository-files/contributing-file.md:10
msgid ""
"The contributing file lowers barriers to entry for new and seasoned "
"contributors as it provides a roadmap."
msgstr "コントリビュートファイルは、ロードマップを提供するため、新しいコントリビューターやベテランのコントリビューターの参入障壁を低くします。"

#: ../../documentation/repository-files/contributing-file.md:12
msgid ""
"**For Contributors**: It provides clear instructions on contributing, "
"from reporting issues to submitting pull requests."
msgstr "**貢献者向け**: 問題の報告からプルリクエストの提出まで、貢献に関する明確な指示を提供します。"

#: ../../documentation/repository-files/contributing-file.md:13
msgid ""
"**For Maintainers**: It streamlines contributions by setting expectations"
" and standardizing processes, reducing the time spent clarifying common "
"questions or handling incomplete issues or pull requests."
msgstr ""
"**メンテナ向け**: "
"期待値を設定し、プロセスを標準化することで、コントリビューションを合理化し、一般的な質問を明確にしたり、不完全な問題やプルリクエストの処理に費やす時間を短縮します。"

#: ../../documentation/repository-files/contributing-file.md:15
msgid ""
"Including a well-written CONTRIBUTING.md file in your project is one way "
"of making it more welcoming and open to new and seasoned contributors. It"
" also helps create a smoother workflow for everyone involved."
msgstr ""
"よく書かれた CONTRIBUTING.md "
"ファイルをプロジェクトに含めることは、新しい貢献者やベテランの貢献者をより歓迎し、オープンにする方法の1つです。また、関係者全員にとって、よりスムーズなワークフローを構築するのにも役立ちます。"

#: ../../documentation/repository-files/contributing-file.md:17
msgid "Make it welcoming"
msgstr "歓迎しましょう"

#: ../../documentation/repository-files/contributing-file.md:19
msgid ""
"Make the guide welcoming. Use accessible language to encourage "
"participation from contributors of all experience levels. For example:"
msgstr "歓迎されるガイドにします。あらゆる経験レベルの貢献の参加を促すために、わかりやすい言葉を使います。 例えば:"

#: ../../documentation/repository-files/contributing-file.md:21
msgid ""
"Avoid technical jargon or explain terms when necessary (for example, "
"\"fork the repository\")."
msgstr "専門用語は避け、必要な場合は用語を説明します (例えば \"リポジトリをフォークする\" など) 。"

#: ../../documentation/repository-files/contributing-file.md:22
msgid ""
"Include a friendly introduction, such as \"Thank you for your interest in"
" contributing! We're excited to collaborate with you.\""
msgstr "\"ご協力ありがとうございます！ あなたとのコラボレーションを楽しみにしています。\" のような友好的な自己紹介を入れます。"

#: ../../documentation/repository-files/contributing-file.md:23
msgid "Highlight that all contributions, no matter how small, are valued."
msgstr "どんな些細な貢献でも評価されることを強調します。"

#: ../../documentation/repository-files/contributing-file.md:25
msgid "What a CONTRIBUTING.md file should contain"
msgstr "CONTRIBUTING.md ファイルが含むべき内容"

#: ../../documentation/repository-files/contributing-file.md:27
msgid "Example contributing files"
msgstr "貢献ファイルの例"

#: ../../documentation/repository-files/contributing-file.md:30
msgid ""
"[PyGMT contributing "
"file](https://github.com/GenericMappingTools/pygmt/blob/main/CONTRIBUTING.md)"
msgstr ""
"[PyGMT "
"貢献ファイル](https://github.com/GenericMappingTools/pygmt/blob/main/CONTRIBUTING.md)"

#: ../../documentation/repository-files/contributing-file.md:31
msgid ""
"[Verde's contributing "
"file](https://github.com/fatiando/verde/blob/main/CONTRIBUTING.md)"
msgstr "[Verdeの貢献ファイル](https://github.com/fatiando/verde/blob/main/CONTRIBUTING.md)"

#: ../../documentation/repository-files/contributing-file.md:34
msgid ""
"Your Python package should include a file called **CONTRIBUTING.md** "
"located in the root of your repository next to [your **README.md** file"
"](readme-file)."
msgstr ""
"あなたのPythonパッケージは、リポジトリのルートに [**README.md** ファイル](readme-file) の次に "
"**CONTRIBUTING.md** というファイルを含むべきです。"

#: ../../documentation/repository-files/contributing-file.md:37
msgid "The CONTRIBUTING.md file should include information about:"
msgstr "CONTRIBUTING.mdファイルには、以下の情報を含める必要があります:"

#: ../../documentation/repository-files/contributing-file.md:39
msgid "The types of contributions that you welcome"
msgstr "歓迎する貢献の種類"

#: ../../documentation/repository-files/contributing-file.md:41
msgid ""
"Example: We welcome contributions of all kinds. If you want to address an"
" existing issue, check out our issues in this repository and comment on "
"the one that you'd like to help with. Otherwise, you can open a new "
"issue..."
msgstr ""
"例: あらゆる種類の貢献を歓迎します。 "
"既存の問題に取り組みたい場合は、このリポジトリにある私たちの問題をチェックし、手伝いたい問題にコメントしてください。そうでない場合は、新しいissueを開くことができます..."

#: ../../documentation/repository-files/contributing-file.md:43
msgid ""
"How you'd like contributions to happen. Clearly outline your contribution"
" process. For example:"
msgstr "どのように貢献してほしいか。貢献のプロセスを明確に示します。 例えば:"

#: ../../documentation/repository-files/contributing-file.md:44
msgid "Should contributors address open issues"
msgstr "貢献者は未解決の問題に取り組むべきです"

#: ../../documentation/repository-files/contributing-file.md:45
msgid "Are new issues welcome?"
msgstr "新しいissueは歓迎されますか？"

#: ../../documentation/repository-files/contributing-file.md:46
msgid ""
"Should contributors open a pull request (PR) directly or discuss changes "
"first?"
msgstr "貢献者は直接プルリクエスト(PR)を開くべきですか、それともまず変更について議論すべきですか？"

#: ../../documentation/repository-files/contributing-file.md:48
msgid ""
"Include instructions for the fork and pull request workflow and link to "
"resources or guides explaining these steps (if available)."
msgstr "フォークとプルリクエストのワークフローに関する説明と、 (利用可能な場合は) これらのステップを説明するリソースやガイドへのリンクを含めてください。"

#: ../../documentation/repository-files/contributing-file.md:49
msgid ""
"Guidelines that you have in place for users submitting issues, pull "
"requests, or asking questions."
msgstr "課題、プルリクエスト、質問を提出するユーザーに対して設けているガイドライン。"

#: ../../documentation/repository-files/contributing-file.md:51
msgid ""
"If you have a [development guide](development-guide), link to it. This "
"guide should provide clear instructions on how to set up your development"
" environment locally. It also should overview CI tools that you have that"
" could simplify the contribution process (for example, pre-[commit.ci "
"bot](https://www.pyopensci.org/python-package-guide/package-structure-"
"code/code-style-linting-format.html#pre-commit-ci), and so on), [linters,"
" code formatters](https://www.pyopensci.org/python-package-guide/package-"
"structure-code/code-style-linting-format.html#code-linting-formatting-"
"and-styling-tools), and so on."
msgstr ""
"[development guide](development-guide) を持っているなら、リンクしてください。 "
"このガイドでは、開発環境をローカルにセットアップする方法をわかりやすく説明します。また、貢献のプロセスを簡素化できるようなCIツールについても概説する必要があります"
" (例えば [commit.ci bot](https://www.pyopensci.org/python-package-guide"
"/package-structure-code/code-style-linting-format.html#pre-commit-ci) "
"など), [linters, code formatters](https://www.pyopensci.org/python-package-"
"guide/package-structure-code/code-style-linting-format.html#code-linting-"
"formatting-and-styling-tools), など。"

#: ../../documentation/repository-files/contributing-file.md:53
msgid ""
"This guide should also include information for someone interested in "
"asking questions. Some projects accept questions as GitHub or GitLab "
"issues. Others use GitHub discussions, Discourse, or even a Discord "
"server."
msgstr ""
"このガイドには、質問することに興味がある人のための情報も含まれているはずです。 "
"GitHubやGitLabのissueとして質問を受け付けるプロジェクトもあります。また、GitHubディスカッションやDiscourse、あるいはDiscordサーバーを使う人もいます。"

#: ../../documentation/repository-files/contributing-file.md:56
msgid "The contributing file should also include:"
msgstr "貢献ファイルには以下も含めるべきです:"

#: ../../documentation/repository-files/contributing-file.md:58
msgid "A link to your [code of conduct](coc-file)"
msgstr "[行動規範](coc-file) へのリンク"

#: ../../documentation/repository-files/contributing-file.md:59
msgid "A link to your project's [LICENSE](license-file)"
msgstr "プロジェクトの [LICENSE](license-file) へのリンク"

#: ../../documentation/repository-files/contributing-file.md:60
msgid "A link to a [development guide](development-guide) if you have one"
msgstr "もしあれば [開発ガイド](development-guide) へのリンク"

#: ../../documentation/repository-files/contributing-file.md:62
msgid "Summary"
msgstr "概要"

#: ../../documentation/repository-files/contributing-file.md:64
msgid ""
"A well-crafted CONTRIBUTING.md file is welcome mat for your project! By "
"providing clear instructions, helpful resources, and a welcoming tone, "
"you make it easier for contributors to get involved and build a stronger,"
" more collaborative community around your project."
msgstr "よく練られたCONTRIBUTING.mdファイルは、あなたのプロジェクトのウェルカムマットです！明確な指示、有用なリソース、歓迎ムードを提供することで、貢献者がプロジェクトに参加しやすくなり、より強力で協力的なコミュニティが構築されます。"

#: ../../documentation/repository-files/development-guide.md:2
msgid "What the development guide for your Python package should contain"
msgstr "Pythonパッケージの開発ガイドに含めるべき内容"

#: ../../documentation/repository-files/development-guide.md:4
msgid ""
"Ideally, your package should also have a development guide. This file may"
" live in your package documentation and should be linked to from your "
"CONTRIBUTING.md file (discussed above). A development guide should "
"clearly show technically proficient users how to:"
msgstr ""
"理想的には、あなたのパッケージは開発ガイドを持つべきです。 このファイルはあなたのパッケージのドキュメントにあり、 "
"CONTRIBUTING.mdファイル(前述)からリンクされるべきです。 "
"開発ガイドは、技術的に熟達したユーザに対して、以下の方法を明確に示すべきです:"

#: ../../documentation/repository-files/development-guide.md:8
msgid "Set up a development environment locally to work on your package"
msgstr "開発環境をローカルにセットアップし、パッケージで作業できるようにする"

#: ../../documentation/repository-files/development-guide.md:9
msgid "Run the test suite"
msgstr "テストスイートの実行"

#: ../../documentation/repository-files/development-guide.md:10
msgid "Build documentation locally"
msgstr "ドキュメントをローカルにビルドする"

#: ../../documentation/repository-files/development-guide.md:12
msgid "The development guide should also have guidelines for:"
msgstr "開発ガイドには、次のようなガイドラインもあるはずです:"

#: ../../documentation/repository-files/development-guide.md:14
msgid ""
"code standards including docstring style, code format and any specific "
"code approaches that the package follows."
msgstr "docstringスタイルを含むコード標準、コードフォーマットと、パッケージが従う特定のコードアプローチ。"

#: ../../documentation/repository-files/development-guide.md:16
msgid ""
"It's also helpful to specify the types of tests you request if a "
"contributor submits a new feature or a change to an existing feature that"
" will not be covered by your existing test suite."
msgstr "また、既存のテストスイートではカバーできないような新機能や既存機能の変更をコントリビューターが提出する場合、要求するテストの種類を指定しておくと便利です。"

#: ../../documentation/repository-files/development-guide.md:18
msgid ""
"If you have time to document it, it's also helpful to document your "
"maintainer workflow and release processes."
msgstr "もし文書化する時間があれば、メンテナのワークフローやリリースプロセスを文書化することも有用です。"

#: ../../documentation/repository-files/development-guide.md:20
msgid "Why a development guide is important"
msgstr "開発ガイドが重要な理由"

#: ../../documentation/repository-files/development-guide.md:22
msgid "It's valuable to have a development guide, in the case that you wish to:"
msgstr "開発ガイドを持つことは価値があります、もしそうしたいのであれば:"

#: ../../documentation/repository-files/development-guide.md:25
msgid "Onboard new maintainers."
msgstr "新しいメンテナーを迎える。"

#: ../../documentation/repository-files/development-guide.md:26
msgid ""
"Allow technically inclined contributors to make thoughtful and useful "
"code based pull requests to your repository."
msgstr "技術志向のコントリビューターが、あなたのリポジトリに対して、思慮深く有用なコードベースのプルリクエストを行えるようにします。"

#: ../../documentation/repository-files/development-guide.md:28
msgid ""
"It also is important to pyOpenSci that the maintenance workflow is "
"documented in the case that we need to help you onboard new maintainers "
"in the future."
msgstr "また、pyOpenSciにとって、将来新しいメンテナーの参加を支援する必要がある場合に備えて、メンテナンスのワークフローを文書化しておくことも重要です。"

#: ../../documentation/repository-files/development-guide.md:33
msgid ""
"A well thought out continuous integration setup in your repository can "
"allow users to skip building the package locally (especially if they are "
"just updating text)."
msgstr "リポジトリによく考えられた継続的インテグレーションのセットアップがあれば、ユーザーはローカルでのパッケージのビルドを省略することができる（特にテキストを更新するだけの場合）。"

#: ../../documentation/repository-files/development-guide.md:38
msgid ""
"A development guide, while strongly recommended, is not a file that "
"pyOpenSci requires a package to have in order to be eligible for review. "
"Some maintainers may also opt to include the development information in "
"their contributing guide."
msgstr "開発ガイドは強く推奨されますが、pyOpenSciがレビューの対象とするためにパッケージに要求するファイルではありません。メンテナによっては、コントリビューティングガイドに開発情報を含めることもできます。"

#: ../../documentation/repository-files/development-guide.md:44
msgid ""
"[The Mozilla Science Lab website has a nice outline of things to consider"
" when creating a contributing guide](https://mozillascience.github.io"
"/working-open-workshop/contributing/)"
msgstr ""
"[Mozilla Science "
"Labのウェブサイトには、寄稿ガイドを作成する際に考慮すべきことの素晴らしいアウトラインがあります](https://mozillascience.github.io"
"/working-open-workshop/contributing/)"

#: ../../documentation/repository-files/intro.md:1
msgid "Documentation Files That Should be in your Python Package Repository"
msgstr "Pythonパッケージリポジトリにあるべきドキュメントファイル"

#: ../../documentation/repository-files/intro.md:3
msgid ""
"In this section of the Python packaging guide, we review all of the files"
" that you should have in your Python package repository. Your Python "
"package should, at a minimum have the following files:"
msgstr ""
"Python パッケージングガイドのこのセクションでは、Python パッケージリポジトリにあるべきすべてのファイルをレビューします。 "
"Python パッケージには最低限以下のファイルが必要です:"

#: ../../documentation/repository-files/intro.md:7
msgid ""
"The files mentions above (README, Code of Conduct, license file, etc) are"
" used as a measure of package community health on many online platforms. "
"Below, you can see an example how GitHub evaluates community health. This"
" community health link is available for all GitHub repositories."
msgstr ""
"上で言及したファイル（README、行動規範、ライセンスファイルなど）は、多くのオンラインプラットフォームでパッケージコミュニティの健全性を測る尺度として使われています。"
" 以下に、GitHubがコミュニティの健全性をどのように評価しているかの例を示します。 このコミュニティ健全性リンクは、すべての GitHub "
"リポジトリで利用できます。"

#: ../../documentation/repository-files/intro.md:13
msgid ""
"Image showing that the MovingPandas GitHub repository community health "
"page with green checks next to each file including a description, README,"
" code of conduct, contributing, license and issue templates. Note that "
"Security policy has a yellow circle next to it as that is missing from "
"the repo."
msgstr ""
"MovingPandasのGitHubリポジトリコミュニティの健全性を示す画像で、説明、README、行動規範、貢献、ライセンス、課題テンプレートを含む各ファイルの横に緑色のチェックが付いています。"
" セキュリティポリシーは黄色い丸で囲まれています。"

#: ../../documentation/repository-files/intro.md:19
msgid ""
"GitHub community health looks for a readme file among other elements when"
" it evaluates the community level health of your repository. This example"
" is from the [MovingPandas GitHub "
"repo](https://github.com/anitagraser/movingpandas/community) *(screen "
"shot taken Nov 23 2022)*"
msgstr ""
"GitHub community health は、リポジトリのコミュニティレベルの健全性を評価する際に、他の要素の中から readme "
"ファイルを探します。この例は、 [MovingPandas GitHub "
"repo](https://github.com/anitagraser/movingpandas/community) "
"*(2022年11月23日撮影のスクリーンショット)* からのものです。"

#: ../../documentation/repository-files/intro.md:22
msgid ""
"[Snyk](https://snyk.io/advisor/python) is another well-known company that"
" keeps tabs on package health. Below you can see a similar evaluation of "
"files in the GitHub repo as a measure of community health."
msgstr ""
"[Snyk](https://snyk.io/advisor/python) もパッケージの健全性を監視している有名な会社です。 "
"以下では、コミュニティの健全性を測る尺度として、GitHub リポジトリ内のファイルに対する同様の評価を見ることができます。"

#: ../../documentation/repository-files/intro.md:26
msgid ""
"Screenshot of the Snyk page for movingpandas. It shows that the "
"repository has a README file, contributing file, code of conduct. It also"
" shows that it has 30 contributors and no funding. The package health "
"score is 78/100."
msgstr ""
"movingpandasのSnykページのスクリーンショットです。 "
"このリポジトリには、READMEファイル、貢献ファイル、行動規範があることがわかります。 "
"また、30人の貢献者がいて、資金提供はないことがわかります。 パッケージのヘルススコアは78/100です。"

#: ../../documentation/repository-files/intro.md:32
msgid ""
"Screenshot showing [SNYK](https://snyk.io/advisor/python/movingpandas) "
"package health for moving pandas. Notice both platforms look for a README"
" file. *(screen shot taken Nov 23 2022)*"
msgstr ""
"[SNYK](https://snyk.io/advisor/python/movingpandas) "
"パッケージの健全性を示すスクリーンショット。 両方のプラットフォームがREADMEファイルを探していることに注目してください。 "
"*(スクリーンショットは2022年11月23日撮影)* 。"

#: ../../documentation/repository-files/license-files.md:8
msgid "License files for scientific Python open source software"
msgstr "科学的Pythonオープンソースソフトウェアのライセンスファイル"

#: ../../documentation/repository-files/license-files.md:10
msgid ""
"Want to learn how to add a license file to your GitHub repository? Check "
"out this lesson."
msgstr "GitHub リポジトリにライセンスファイルを追加する方法を学びたいですか？ このレッスンを見てみましょう。"

#: ../../documentation/repository-files/license-files.md:17
msgid "What is a Open Source License file?"
msgstr "オープンソースライセンスファイルとは何ですか？"

#: ../../documentation/repository-files/license-files.md:19
msgid ""
"When we talk about LICENSE files, we are referring to a file in your "
"GitHub or GitLab repository that contains legally binding language that "
"describes to your users how they can legally use  (and not use) your "
"package."
msgstr "LICENSEファイルというのは、GitHubやGitLabのリポジトリにあるファイルのことです。このファイルには、あなたのパッケージをユーザーが合法的に使う（あるいは使わない）方法が書かれています。"

#: ../../documentation/repository-files/license-files.md:23
msgid "Why licenses are important"
msgstr "ライセンスが重要な理由"

#: ../../documentation/repository-files/license-files.md:25
msgid ""
"A license file is important for all open source projects because it "
"protects both you as a maintainer and your users. The license file helps "
"your users and the community understand:"
msgstr ""
"ライセンスファイルは、メンテナであるあなたとユーザの両方を保護するため、すべてのオープンソースプロジェクトにとって重要です。 "
"ライセンスファイルは、あなたのユーザとコミュニティの理解を助けます:"

#: ../../documentation/repository-files/license-files.md:27
msgid "How they can use your software"
msgstr "ソフトウェアの利用方法"

#: ../../documentation/repository-files/license-files.md:28
msgid "Whether the software can be reused or adapted for other purposes"
msgstr "ソフトウェアの再利用や他の目的への転用が可能かどうか"

#: ../../documentation/repository-files/license-files.md:29
msgid "How people can contribute to your project"
msgstr "プロジェクトに貢献する方法"

#: ../../documentation/repository-files/license-files.md:31
msgid "and more."
msgstr "などなど。"

#: ../../documentation/repository-files/license-files.md:33
msgid ""
"[Read more about why license files are critical in protecting both you as"
" a maintainer and your users of your scientific Python open source "
"package.](https://opensource.guide/legal/#just-give-me-the-tldr-on-what-i"
"-need-to-protect-my-project)"
msgstr ""
"[科学的なPythonオープンソースパッケージのメンテナであるあなたとユーザの両方を保護するために、ライセンスファイルが重要である理由についてもっと読む](https://opensource.guide/legal"
"/#just-give-me-the-tldr-on-what-i-need-to-protect-my-project)"

#: ../../documentation/repository-files/license-files.md:35
msgid "Where to store your license"
msgstr "ライセンスの保管場所"

#: ../../documentation/repository-files/license-files.md:37
msgid ""
"Your `LICENSE` file should be stored at root of your GitHub / GitLab "
"repository."
msgstr "`LICENSE` ファイルは GitHub / GitLab リポジトリのルートに保存してください。"

#: ../../documentation/repository-files/license-files.md:39
msgid ""
"Some maintainers customize the language in their license files for "
"specific reasons. However, if you are just getting started, we suggest "
"that you select a permissive license and then use the legal language "
"templates provided both by GitHub and/or the "
"[choosealicense.com](https://choosealicense.com/) website."
msgstr ""
"特定の理由からライセンスファイルの言葉をカスタマイズするメンテナもいます。 "
"しかし、これから始めるのであれば、寛容なライセンスを選択し、GitHubや "
"[choosealicense.com](https://choosealicense.com/) "
"のウェブサイトで提供されている法的な言語テンプレートを使うことをお勧めします。"

#: ../../documentation/repository-files/license-files.md:42
msgid ""
"Licenses are legally binding, as such you should avoid trying to create "
"your own license unless you have the guidance of legal council."
msgstr "ライセンスには法的拘束力があるため、法律顧問の指導がない限り、独自のライセンスを作成しようとするのは避けるべきです。"

#: ../../documentation/repository-files/license-files.md:44
msgid "Use open permissive licenses when possible"
msgstr "可能な限りオープンパーミッシブライセンスを使用する"

#: ../../documentation/repository-files/license-files.md:46
msgid ""
"We generally suggest that you use a permissive, license that is [Open "
"Software Initiative (OSI) approved](https://opensource.org/licenses/). If"
" you are [submitting your package to pyOpenSci for peer "
"review](https://www.pyopensci.org/about-peer-review/index.html), then we "
"require an OSI approved license."
msgstr ""
"一般的に、 [Open Software Initiative (OSI) "
"approved](https://opensource.org/licenses/)の寛容なライセンスを使用することを推奨します。 "
"もしあなたが[査読のためにpyOpenSciにパッケージを提出する](https://www.pyopensci.org/about-peer-"
"review/index.html) のであれば、OSIが承認したライセンスが必要です。"

#: ../../documentation/repository-files/license-files.md:50
msgid "Copyleft licenses"
msgstr "コピーレフトのライセンス"

#: ../../documentation/repository-files/license-files.md:51
msgid ""
"The other major category of licenses are [\"copyleft\" "
"licenses](https://en.wikipedia.org/wiki/Copyleft). Copyleft licenses "
"require people that use your work to redistribute it with the same (or "
"greater) rights to modify, copy, share, and redistribute it. In other "
"words, copyleft licenses prohibit someone taking your work, making a "
"proprietary version of it, and redistributing it without providing the "
"source code so others can do the same. Copyleft licenses are \"sticky\" "
"in that they are designed to ensure that more free software is created."
msgstr ""
"ライセンスのもう一つの大きなカテゴリーは、 [\"コピーレフト\" "
"ライセンスです](https://en.wikipedia.org/wiki/Copyleft) "
"。コピーレフトのライセンスは、あなたの作品を利用する人々に、それを改変、複製、共有、再配布するのと同じ (あるいはそれ以上の) "
"権利を与えて再配布することを要求します。 "
"言い換えれば、コピーレフトのライセンスは、誰かがあなたの作品を取り上げ、プロプライエタリなバージョンを作り、他の人が同じことができるようにソースコードを提供せずに再配布することを禁止しているのです。コピーレフトのライセンスは、より多くの自由ソフトウェアが作成されるように設計されているという点で、"
" \"粘着性\" があります。"

#: ../../documentation/repository-files/license-files.md:56
#, python-brace-format
msgid ""
"The difference between copyleft and permissive licenses is an important "
"cultural divide in free and open source software (e.g., see "
"{footcite}`hunterReclaimingComputingCommons2016`, "
"{footcite}`gnuprojectWhatFreeSoftware2019`, "
"{footcite}`gnuprojectWhatCopyleft2022`). It is important to understand "
"this difference when choosing your license. Copyleft licenses represents "
"the \"free\" part of \"free and open source software\". Free and open "
"source software is intrinsically political, and it is important to be "
"aware of power dynamics in computing as well as the practical problems of"
" license compatibility (discussed below)."
msgstr ""
"コピーレフトとパーミッシブライセンスの違いは、フリーでオープンなソースソフトウェアにおける重要な文化的分裂です (例えば "
"{footcite}`hunterReclaimingComputingCommons2016`, "
"{footcite}`gnuprojectWhatFreeSoftware2019`, "
"{footcite}`gnuprojectWhatCopyleft2022`)。 ライセンスを選択する際には、この違いを理解することが重要である。"
" コピーレフトのライセンスは、 \"フリーでオープンなソースソフトウェア\" の \"フリー\" の部分を表している。 "
"フリーでオープンなソースソフトウェアは、本質的に政治的なものであり、ライセンスの互換性という現実的な問題 (後述) "
"と同様に、コンピューティングにおけるパワーダイナミクスを意識することが重要です。"

#: ../../documentation/repository-files/license-files.md:61
msgid "How to choose a license"
msgstr "ライセンスの選び方"

#: ../../documentation/repository-files/license-files.md:63
msgid ""
"To select your license, we suggest that you use GitHub's [Choose a "
"License tool](https://choosealicense.com/)."
msgstr ""
"ライセンスを選択するには、GitHubの [Choose a License tool](https://choosealicense.com/)"
" を使うことをお勧めします。"

#: ../../documentation/repository-files/license-files.md:66
msgid ""
"If you choose your license when creating a new GitHub repository, you can"
" also automatically get a text copy of the license file to add to your "
"repository. However in some cases the license that you want is not "
"available through that online process."
msgstr ""
"GitHub "
"リポジトリの新規作成時にライセンスを選択すると、自動的にライセンスファイルのテキストコピーを取得してリポジトリに追加することもできます。 "
"しかし、オンラインプロセスでは希望のライセンスが取得できないこともあります。"

#: ../../documentation/repository-files/license-files.md:71
msgid "License recommendations from the SciPy package"
msgstr "SciPyパッケージからのライセンス勧告"

#: ../../documentation/repository-files/license-files.md:72
msgid ""
"[The SciPy documentation has an excellent overview of "
"licenses.](https://docs.scipy.org/doc/scipy/dev/core-"
"dev/index.html#licensing). One of the key elements that these docs "
"recommend is ensuring that the license that you select is compatible with"
" licenses used in many parts of the scientific Python ecosystem. Below is"
" a highlight of this text which outlines license that are compatible with"
" the modified BSD license that SciPy uses."
msgstr ""
"[SciPyのドキュメントには、ライセンスの優れた概要があります](https://docs.scipy.org/doc/scipy/dev"
"/core-dev/index.html#licensing) 。 "
"これらのドキュメントが推奨する重要な要素の一つは、選択するライセンスが科学的なPythonのエコシステムのコアで使用されているライセンスと相補的であることを確認することです。"
" 以下は、SciPyが使用している修正BSDライセンスと互換性のあるライセンスの概要です。"

#: ../../documentation/repository-files/license-files.md:78
msgid ""
"Other licenses that are compatible with the modified BSD license that "
"SciPy uses are 2-clause BSD, MIT and PSF. Incompatible licenses are GPL, "
"Apache and custom licenses that require attribution/citation or prohibit "
"use for commercial purposes."
msgstr ""
"SciPyが使用している修正BSDライセンスと互換性のある他のライセンスは、2-clause BSD、MIT、PSFです。 "
"互換性のないライセンスは、GPL、Apache、および帰属表示/引用を必要とする、または商用目的での使用を禁止するカスタムライセンスです。"

#: ../../documentation/repository-files/license-files.md:80
msgid ""
"If your primary goal is for your code to be used by other, major packages"
" in the scientific ecosystem, we also recommend that you consider using "
"either BSD or MIT as your license. If you are unsure, the MIT license "
"tends to be a simpler easier-to-understand option."
msgstr ""
"もしあなたのコードが、科学的エコシステムの他の主要なパッケージで使われることを第一の目的としているのであれば、BSDかMITのどちらかのライセンスを使うことを検討することも推奨します。"
" よくわからない場合、MITライセンスはよりシンプルで理解しやすい選択肢となる傾向があります。"

#: ../../documentation/repository-files/license-files.md:85
msgid ""
"Important: make sure that you closely follow the guidelines outlines by "
"the License that you chose"
msgstr "重要：選択したライセンスのガイドラインに忠実に従うこと"

#: ../../documentation/repository-files/license-files.md:87
msgid ""
"Every license has different guidelines in terms of what code you can use "
"in your package and also how others can (or can not) use the code in your"
" package."
msgstr "どのライセンスも、あなたがパッケージの中でどのようなコードを使うことができるか、また、他の人があなたのパッケージの中のコードをどのように使うことができるか(あるいは使うことができないか)という点で、異なるガイドラインを持っています。"

#: ../../documentation/repository-files/license-files.md:90
msgid ""
"If you borrow code from other tools or online sources, make sure that the"
" license for the code that you are using also complies with the license "
"that you selected for your package."
msgstr "他のツールやオンラインソースからコードを借用する場合は、使用するコードのライセンスが、あなたがパッケージに選択したライセンスにも準拠していることを確認してください。"

#: ../../documentation/repository-files/license-files.md:94
msgid ""
"A useful way to think about license compatibility is the distinction "
"between **\"inbound\"** and **\"outbound\"** compatibility. \"Inbound\" "
"licenses are those that cover the software you plan to include in your "
"package. Your package is protected by an \"outbound\" license."
msgstr ""
"ライセンスの互換性について考えるのに便利なのは、 **\"inbound\"** と **\"outbound\"** の互換性という区別です。 "
"\"Inbound\" ライセンスとは、あなたがパッケージに含める予定のソフトウェアをカバーするライセンスです。あなたのパッケージは "
"\"outbound\" ライセンスで保護されています。"

#: ../../documentation/repository-files/license-files.md:98
msgid ""
"**Permissive licenses** like BSD and MIT have few **outbound** "
"restrictions - they can be used in any way by downstream consumers, "
"including making them proprietary. This is why they are favored by many "
"businesses and large packages that want to be adopted by businesses. "
"Permissive licenses have more **inbound** restrictions - they can't use "
"software that requires more freedoms to be preserved than they do, like "
"copyleft licenses. A package licensed under MIT needs to take special "
"care when including or modifying a package licensed under the GPL-3."
msgstr ""
"BSDやMITのような **Permissive licenses** は、 **outbound** の制限がほとんどありません - "
"専有化も含めて、ダウンストリームのカスタマーがどのようにでも使用することができます。 "
"そのため、多くの企業や、企業に採用されたいと考えている大規模なパッケージに支持されています。パーミッシブライセンスには、より多くの "
"**inbound** 制限があります - "
"コピーレフトライセンスのように、自分たち以上に自由を守る必要のあるソフトウェアを使うことができないのです。MITでライセンスされたパッケージは、GPL-3でライセンスされたパッケージを含めたり改変したりする場合、特別な注意を払う必要があります。"

#: ../../documentation/repository-files/license-files.md:103
msgid ""
"**Copyleft licenses** like GPL-3 have more **outbound** restrictions - "
"they require more of packages that include, use, modify, and reproduce "
"them. This is the purpose of copyleft licenses, to ensure that derivative"
" works remain free and open source. They have fewer **inbound** "
"restrictions - a GPL-3 licensed package can include any other "
"permissively licensed and most copyleft licensed packages."
msgstr ""
"GPL-3のような **Copyleft licenses** は、より **outbound** の制限があります - "
"それらは、それらを含み、使用し、変更し、複製するパッケージにより多くを要求します。 "
"これがコピーレフトライセンスの目的であり、派生作品がフリーでオープンソースのままであることを保証するためです。 **inbound** "
"の制約が少ないです - "
"GPL-3でライセンスされたパッケージは、他の寛容にライセンスされたパッケージや、コピーレフトでライセンスされたパッケージのほとんどを含めることができます。"

#: ../../documentation/repository-files/license-files.md:71
msgid "Compatible"
msgstr "互換性"

#: ../../documentation/repository-files/license-files.md:71
msgid "Dependency <br> (\"Inbound\")"
msgstr "依存 <br> (\"Inbound\")"

#: ../../documentation/repository-files/license-files.md:71
msgid "Your Package"
msgstr "あなたのパッケージ"

#: ../../documentation/repository-files/license-files.md:71
msgid "Downstream Package <br> (\"Outbound\")"
msgstr "下流パッケージ <br> (\"Outbound\")"

#: ../../documentation/repository-files/license-files.md:71
msgid "<i class=\"fa-solid fa-check\" style=\"color: MediumSeaGreen\"></i>"
msgstr "<i class=\"fa-solid fa-check\" style=\"color: MediumSeaGreen\"></i>"

#: ../../documentation/repository-files/license-files.md:71
msgid "Permissive"
msgstr "許可制"

#: ../../documentation/repository-files/license-files.md:71
msgid "<i class=\"fa-solid fa-x\" style=\"color: Crimson\"></i>"
msgstr "<i class=\"fa-solid fa-x\" style=\"color: Crimson\"></i>"

#: ../../documentation/repository-files/license-files.md:71
msgid "Copyleft"
msgstr "コピーレフト"

#: ../../documentation/repository-files/license-files.md:118
msgid "An example of how a license determine how code can be reused"
msgstr "ライセンスがコードの再利用を決定する例"

#: ../../documentation/repository-files/license-files.md:121
msgid ""
"Let's use StackOverflow as an example that highlights how a license "
"determines how code can or can not be used."
msgstr "StackOverflowを例に、ライセンスによってコードの使用可否がどのように決まるかを明らかにしましょう。"

#: ../../documentation/repository-files/license-files.md:123
msgid ""
"[Stack Overflow uses a Creative Commons Share Alike "
"license.](https://stackoverflow.com/help/licensing). The sharealike "
"license requires you to use the same sharealike license when you reuse "
"any code from Stack Overflow."
msgstr ""
"[Stack OverflowはCreative Commons Share "
"Alikeライセンスを使用しています。](https://stackoverflow.com/help/licensing) "
"Sharealikeライセンスでは、Stack "
"Overflowのコードを再利用する際に、同じSharealikeライセンスを使用することが義務付けられています。"

#: ../../documentation/repository-files/license-files.md:125
#, python-brace-format
msgid ""
"This means that from a legal perspective, if you copy code from the Stack"
" Overflow website and use it in your package that is licensed "
"differently, say with a MIT license, you are violating Stack Overflow's "
"license requirements! This would not be true with a GPL licensed package."
" `GPL-3` packages can include code licensed by `CC-BY-SA` "
"{footcite}`creativecommonsShareAlikeCompatibilityGPLv32015`."
msgstr ""
"つまり、法的な観点からは、Stack "
"Overflowのウェブサイトからコードをコピーし、MITライセンスなど異なるライセンスのパッケージで使用すると、Stack "
"Overflowのライセンス要件に違反することになります！ これはGPLライセンスのパッケージでは当てはまりません。 `GPL-3` パッケージは"
" `CC-BY-SA` {footcite}`creativecommonsShareAlikeCompatibilityGPLv32015` "
"によってライセンスされたコードを含むことができます。"

#: ../../documentation/repository-files/license-files.md:128
msgid "🚨 Proceed with caution! 🚨"
msgstr "🚨 慎重に進め！ 🚨"

#: ../../documentation/repository-files/license-files.md:131
msgid "What about software citation?"
msgstr "ソフトウェアの引用についてはどうだろうか？"

#: ../../documentation/repository-files/license-files.md:133
msgid ""
"While many permissive licenses do not require citation we STRONG "
"encourage that you cite all software that you use in papers, blogs and "
"other publications. You tell your users how to cite your package by using"
" a [citation.cff file](https://docs.github.com/en/repositories/managing-"
"your-repositorys-settings-and-features/customizing-your-repository/about-"
"citation-files). We will cover this topic when we talk about creating "
"DOI's for your package using Zenodo."
msgstr ""
"多くの寛容なライセンスは引用を必要としませんが、わたしたちは、あなたが論文やブログ、その他の出版物で使用するすべてのソフトウェアを引用することを強く推奨します。"
" あなたは、 [citation.cff ファイル](https://docs.github.com/en/repositories"
"/managing-your-repositorys-settings-and-features/customizing-your-"
"repository/about-citation-files) を使うことで、あなたのパッケージの引用方法をユーザに伝えることができます。 "
"このトピックについては、Zenodoを使ってパッケージのDOIを作成する際に説明します。"

#: ../../documentation/repository-files/license-files.md:141
msgid "References"
msgstr "参考文献"

#: ../../documentation/repository-files/readme-file-best-practices.md:3
msgid "README File Guidelines and Resources"
msgstr "READMEファイルのガイドラインとリソース"

#: ../../documentation/repository-files/readme-file-best-practices.md:5
msgid ""
"Your **README.md** file should be located in the root of your GitHub "
"repository. The **README.md** file is important as it is often the first "
"thing that someone sees before they install your package."
msgstr ""
"**README.md** ファイルは、GitHubリポジトリのルートに置く必要があります。 **README.md** "
"ファイルは、あなたのパッケージをインストールする前に誰かが最初に目にすることが多いので重要です。"

#: ../../documentation/repository-files/readme-file-best-practices.md:9
msgid "The README.md file is the landing page of:"
msgstr "README.mdファイルは、そのランディングページです:"

#: ../../documentation/repository-files/readme-file-best-practices.md:11
msgid ""
"Your package as it appears on a repository site such as PyPI or "
"Anaconda.org"
msgstr "PyPIやAnaconda.orgのようなリポジトリサイトに表示されているあなたのパッケージ"

#: ../../documentation/repository-files/readme-file-best-practices.md:12
msgid "Your package's GitHub repository"
msgstr "あなたのパッケージのGitHubリポジトリ"

#: ../../documentation/repository-files/readme-file-best-practices.md:14
msgid ""
"Your README.md file is also used as a measure of package and community "
"health on sites such as:"
msgstr "あなたのREADME.mdファイルは、以下のようなサイトで、パッケージやコミュニティの健全性の指標としても使われています:"

#: ../../documentation/repository-files/readme-file-best-practices.md:17
msgid ""
"[GitHub community health for MovingPandas (available for all "
"repositories)](https://github.com/movingpandas/movingpandas/community) "
"and [Snyk - MovingPandas "
"example](https://snyk.io/advisor/python/movingpandas)"
msgstr ""
"[GitHub community health for MovingPandas (available for all "
"repositories)](https://github.com/movingpandas/movingpandas/community) と "
"[Snyk - MovingPandas "
"example](https://snyk.io/advisor/python/movingpandas) 。"

#: ../../documentation/repository-files/readme-file-best-practices.md:19
msgid ""
"README landing page screenshot for the Pandera package. It has the "
"Pandera logo at the top - which has two arrows in a chevron pattern "
"pointing downward within a circle. Subtitle is statistical data testing "
"toolkit. A data validation library for scientists, engineering, and "
"analytics seeking correctness. Below that are a series of badges "
"including CI tests passing, docs passing, version of Pandera on pypi "
"(0.13.4), MIT license and that it has been pyOpenSci peer reviewed. There"
" are numerous badges below that. Finally below the badges the text says, "
"Pandera provides a flexible and expressive API for performing data "
"validation on dataframe-like objects to make data processing pipelines "
"more readable and robust."
msgstr ""
" "
"PanderaパッケージのREADMEランディングページのスクリーンショット。上部にPanderaのロゴがあり、丸の中にシェブロン模様の2本の矢印が下を向いています。副題は統計データテストツールキットです。正しさを追求する科学者、エンジニアリング、アナリティクスのためのデータ検証ライブラリです。その下には、CIテスト合格、ドキュメント合格、pypi上のPanderaのバージョン(0.13.4)、MITライセンス、pyOpenSci査読済みなどのバッジがあります。その下にも数多くのバッジがあります。バッジの下には、Panderaは、データ処理パイプラインの可読性と堅牢性を向上させるために、データフレームのようなオブジェクトに対してデータ検証を実行するための柔軟で表現力豊かなAPIを提供しますとあります。"

#: ../../documentation/repository-files/readme-file-best-practices.md:25
msgid ""
"Your GitHub repository landing page highlights the README.md file. Here "
"you can see the README.md file for the pyOpenSci package "
"[Pandera](https://github.com/unionai-oss/pandera). *(screen shot taken "
"Nov 23 2022)*"
msgstr ""
"GitHub リポジトリのランディングページは README.md ファイルをハイライトします。ここでは、pyOpenSciパッケージ "
"[Pandera](https://github.com/unionai-oss/pandera) "
"のREADME.mdファイルを見ることができます。 *(スクリーンショットは2022年11月23日撮影)* 。"

#: ../../documentation/repository-files/readme-file-best-practices.md:28
msgid ""
"Thus, it is important that you spend some time up front creating a high "
"quality **README.md** file for your Python package."
msgstr "従って、Pythonパッケージのために高品質の **README.md** ファイルを作成するために、前もって時間をかけることが重要です。"

#: ../../documentation/repository-files/readme-file-best-practices.md:32
msgid ""
"An editor or the editor in chief will ask you to revise your README file "
"before a review begins if it does not meet the criteria specified below."
msgstr "READMEファイルが以下に指定された基準を満たしていない場合、編集者または編集長はレビュー開始前に修正を依頼します。"

#: ../../documentation/repository-files/readme-file-best-practices.md:35
msgid "Please go through this list before submitting your package to pyOpenSci"
msgstr "あなたのパッケージをpyOpenSciに投稿する前に、このリストに目を通してください。"

#: ../../documentation/repository-files/readme-file-best-practices.md:52
msgid "What your README.md file should contain"
msgstr "README.mdファイルの内容"

#: ../../documentation/repository-files/readme-file-best-practices.md:54
msgid ""
"Your **README.md** file should contain the following things (listed from "
"top to bottom):"
msgstr "**README.md** ファイルには、（上から順番に）以下のことが書かれているはずです："

#: ../../documentation/repository-files/readme-file-best-practices.md:56
msgid "✔️ Your package's name"
msgstr "✔️ パッケージ名"

#: ../../documentation/repository-files/readme-file-best-practices.md:58
msgid ""
"Ideally your GitHub repository's name is also the name of your package. "
"The more self explanatory that name is, the better."
msgstr "GitHub リポジトリの名前がパッケージの名前にもなっているのが理想的です。 説明しやすい名前であればあるほどよいでしょう。"

#: ../../documentation/repository-files/readme-file-best-practices.md:61
msgid ""
"✔️ Badges for current package version, continuous integration and test "
"coverage"
msgstr "✔️ 現在のパッケージバージョン、継続的インテグレーション、テストカバレッジのバッジ"

#: ../../documentation/repository-files/readme-file-best-practices.md:63
msgid ""
"Badges are a useful way to draw attention to the quality of your project."
" Badges assure users that your package is well-designed, tested, and "
"maintained. They are also a useful maintenance tool to evaluate if things"
" are building properly. A great example of this is adding a [Read the "
"Docs status badge](https://docs.readthedocs.io/en/stable/badges.html) to "
"your README.md file to quickly see when the build on that site fails."
msgstr ""
"バッジは、あなたのプロジェクトの品質に注意を向けるための便利な方法です。 "
"バッジは、あなたのパッケージがよく設計され、テストされ、保守されていることをユーザに保証します。 "
"また、適切にビルドされているかどうかを評価するのに便利なメンテナンスツールでもあります。 README.mdファイルに [Read the "
"Docs status badge](https://docs.readthedocs.io/en/stable/badges.html) "
"を追加することで、そのサイトのビルドが失敗したときにすぐに確認することができます。"

#: ../../documentation/repository-files/readme-file-best-practices.md:69
msgid ""
"It is common to provide a collection of badges towards the top of your "
"README file for others to quickly browse."
msgstr "READMEファイルの一番上に、他の人がすぐに閲覧できるようにバッジのコレクションを提供するのが一般的です。"

#: ../../documentation/repository-files/readme-file-best-practices.md:72
msgid "Some badges that you might consider adding to your README file include:"
msgstr "READMEファイルへの追加を検討すべきバッジには、以下のようなものがあります:"

#: ../../documentation/repository-files/readme-file-best-practices.md:74
msgid "Current version of the package on PyPI / Anaconda.org"
msgstr "PyPI / Anaconda.org にあるパッケージの最新バージョン"

#: ../../documentation/repository-files/readme-file-best-practices.md:76
msgid ""
"Example: [![PyPI version "
"shields.io](https://img.shields.io/pypi/v/pandera.svg)](https://pypi.org/project/pandera/)"
msgstr ""
"例: [![PyPI version "
"shields.io](https://img.shields.io/pypi/v/pandera.svg)](https://pypi.org/project/pandera/)"

#: ../../documentation/repository-files/readme-file-best-practices.md:76
msgid "PyPI version shields.io"
msgstr "PyPIバージョン shields.io"

#: ../../documentation/repository-files/readme-file-best-practices.md:78
msgid ""
"Status of tests (pass or fail) - Example: [![CI Build](https://github.com"
"/pandera-"
"dev/pandera/workflows/CI%20Tests/badge.svg?branch=main)](https://github.com"
"/pandera-"
"dev/pandera/actions?query=workflow%3A%22CI+Tests%22+branch%3Amain)"
msgstr ""
"テストのステータス(合格または不合格) - 例: [![CI Build](https://github.com/pandera-"
"dev/pandera/workflows/CI%20Tests/badge.svg?branch=main)](https://github.com"
"/pandera-"
"dev/pandera/actions?query=workflow%3A%22CI+Tests%22+branch%3Amain)"

#: ../../documentation/repository-files/readme-file-best-practices.md:78
msgid "CI Build"
msgstr "CI ビルド"

#: ../../documentation/repository-files/readme-file-best-practices.md:80
msgid ""
"Documentation build - Example: ![Docs "
"Building](https://github.com/pyOpenSci/python-package-"
"guide/actions/workflows/build-book.yml/badge.svg)"
msgstr ""
"ドキュメントのビルド - 例: ![Docs Building](https://github.com/pyOpenSci/python-"
"package-guide/actions/workflows/build-book.yml/badge.svg)"

#: ../../documentation/repository-files/readme-file-best-practices.md:80
msgid "Docs Building"
msgstr "ドキュメントビルディング"

#: ../../documentation/repository-files/readme-file-best-practices.md:82
msgid ""
"DOI (for citation) Example: "
"[![DOI](https://zenodo.org/badge/556814582.svg)](https://zenodo.org/badge/latestdoi/556814582)"
msgstr ""
"(参照のための) DOI の例: "
"[![DOI](https://zenodo.org/badge/556814582.svg)](https://zenodo.org/badge/latestdoi/556814582)"

#: ../../documentation/repository-files/readme-file-best-practices.md:82
msgid "DOI"
msgstr "DOI"

#: ../../documentation/repository-files/readme-file-best-practices.md:85
msgid ""
"Once you package is accepted to pyOpenSci, we will provide you with a "
"badge to add to your repository that shows that it has been reviewed. "
"[![pyOpenSci](https://pyopensci.org/badges/peer-"
"reviewed.svg)](https://github.com/pyOpenSci/software-review/issues/12)"
msgstr ""
"あなたのパッケージがpyOpenSciに受理されると、あなたのリポジトリにレビュー済みであることを示すバッジを提供します。 "
"[![pyOpenSci](https://pyopensci.org/badges/peer-"
"reviewed.svg)](https://github.com/pyOpenSci/software-review/issues/12)"

#: ../../documentation/repository-files/readme-file-best-practices.md:85
msgid "pyOpenSci"
msgstr "pyOpenSci"

#: ../../documentation/repository-files/readme-file-best-practices.md:92
msgid ""
"Beware of the overuse of badges! There is such a thing as too much of a "
"good thing (which can overload a potential user!)."
msgstr "バッジの使い過ぎに注意！ 過ぎたるは及ばざるが如し(潜在的なユーザーを過負荷にする可能性があります!)。"

#: ../../documentation/repository-files/readme-file-best-practices.md:95
msgid "✔️ A short, easy-to-understand description of what your package does"
msgstr "✔️ あなたのパッケージが何をするのかを短く、わかりやすく説明する。"

#: ../../documentation/repository-files/readme-file-best-practices.md:97
msgid ""
"At the top of your README file you should have a short, easy-to-"
"understand, 1-3 sentence description of what your package does. This "
"section should clearly state your goals for the package. The language in "
"this description should use less technical terms so that a variety of "
"users with varying scientific (and development) backgrounds can "
"understand it."
msgstr "READMEファイルの一番上に、あなたのパッケージが何をするのか、短く、わかりやすく、1-3文の説明を書くべきです。このセクションには、パッケージの目標を明記します。この説明では、科学的（および開発的）背景が異なるさまざまなユーザーが理解できるように、専門用語をあまり使わないようにすべきです。"

#: ../../documentation/repository-files/readme-file-best-practices.md:103
msgid ""
"In this description, it's useful to let users know how your package fits "
"within the broader scientific Python package ecosystem. If there are "
"other similar packages or complementary package mentions them here in 1-2"
" sentences."
msgstr ""
"この説明では、あなたのパッケージがより広い科学的 Python "
"パッケージのエコシステムの中でどのように位置づけられるかをユーザに知らせるのに役立ちます。 "
"もし他に似たようなパッケージや補完的なパッケージがあれば、ここで1-2文でそれらに言及してください。"

#: ../../documentation/repository-files/readme-file-best-practices.md:108
msgid ""
"Consider writing for a high school level (or equivalent) level. This "
"level of writing is often considered an appropriate level for scientific "
"content that serves a variety of users with varying backgrounds."
msgstr ""
"高校レベル（または同等のレベル）の文章を書くことを考慮します。 "
"このレベルの文章は、さまざまな背景を持つさまざまなユーザーに役立つ科学的な内容として、しばしば適切なレベルとみなされます。"

#: ../../documentation/repository-files/readme-file-best-practices.md:112
msgid ""
"The goal of this description is to maximize accessibility of your "
"**README** file."
msgstr "この記述の目的は、 **README** ファイルへのアクセシビリティを最大化することです。"

#: ../../documentation/repository-files/readme-file-best-practices.md:116
msgid "✔️ Installation instructions"
msgstr "✔️ インストール手順"

#: ../../documentation/repository-files/readme-file-best-practices.md:118
msgid ""
"Include instructions for installing your package. If you have published "
"the package on both PyPI and Anaconda.org, be sure to include "
"instructions for both."
msgstr "パッケージのインストール手順を含めます。 PyPIとAnaconda.orgの両方でパッケージを公開している場合は、必ず両方の説明を含めてください。"

#: ../../documentation/repository-files/readme-file-best-practices.md:121
msgid "✔️ Document any additional setup required"
msgstr "✔️ 必要な追加設定を文書化する"

#: ../../documentation/repository-files/readme-file-best-practices.md:123
msgid ""
"Add any additional setup required such as authentication tokens, to get "
"started using your package. If setup is complex, consider linking to an "
"installation page in your online documentation here rather than over "
"complicating your README file."
msgstr ""
"認証トークンなど、パッケージの使用を開始するために必要な追加設定を追加します。 "
"セットアップが複雑な場合は、READMEファイルを複雑にしすぎるのではなく、オンラインドキュメントのインストールページにリンクすることを検討してください。"

#: ../../documentation/repository-files/readme-file-best-practices.md:128
msgid "✔️ Brief demonstration of how to use the package"
msgstr "✔️ パッケージの使い方の簡単なデモンストレーション"

#: ../../documentation/repository-files/readme-file-best-practices.md:130
msgid ""
"This description ideally includes a brief, quick start code example that "
"shows a user how to get started using your package."
msgstr "この説明には、あなたのパッケージを使い始める方法をユーザーに示す、簡単なクイックスタートコードの例が含まれているのが理想的です。"

#: ../../documentation/repository-files/readme-file-best-practices.md:133
msgid "✔️ Descriptive links to package documentation, short tutorials"
msgstr "✔️ パッケージドキュメントへの説明的なリンク、短いチュートリアル"

#: ../../documentation/repository-files/readme-file-best-practices.md:135
msgid "Include descriptive links to:"
msgstr "説明的なリンクを含める:"

#: ../../documentation/repository-files/readme-file-best-practices.md:137
msgid "The package's documentation page."
msgstr "パッケージのドキュメントページ。"

#: ../../documentation/repository-files/readme-file-best-practices.md:138
msgid "Short tutorials that demonstrate application of your package."
msgstr "パッケージのアプリケーションをデモンストレーションする短いチュートリアル。"

#: ../../documentation/repository-files/readme-file-best-practices.md:140
msgid "Too Much Of A Good Thing"
msgstr "良いことのあまり"

#: ../../documentation/repository-files/readme-file-best-practices.md:143
msgid ""
"Try to avoid including several tutorials in the README.md file itself. "
"This too will overwhelm the user with information."
msgstr "README.mdファイル自体に複数のチュートリアルを含めるのはなるべく避けてください。 これもユーザーを情報で圧倒してしまいます。"

#: ../../documentation/repository-files/readme-file-best-practices.md:145
msgid ""
"A short quick-start code example that shows someone how to use your "
"package is plenty of content for the README file. All other tutorials and"
" documentation should be presented as descriptive links."
msgstr ""
"READMEファイルの内容は、あなたのパッケージの使い方を示す短いクイックスタートのコード例で十分です。 "
"他のすべてのチュートリアルやドキュメントは、説明的なリンクとして表示されるべきです。"

#: ../../documentation/repository-files/readme-file-best-practices.md:151
msgid "✔️ A Community Section with Links to Contributing Guide, Code of Conduct"
msgstr "✔️ 貢献ガイド、行動規範へのリンクがあるコミュニティセクション"

#: ../../documentation/repository-files/readme-file-best-practices.md:153
msgid "Use your README.md file to direct users to more information on:"
msgstr "README.mdファイルを使用して、ユーザーをより詳細な情報に誘導する:"

#: ../../documentation/repository-files/readme-file-best-practices.md:155
msgid "Contributing to your package"
msgstr "パッケージへの貢献"

#: ../../documentation/repository-files/readme-file-best-practices.md:156
msgid "Development setup for more advanced technical contributors"
msgstr "より高度な技術貢献者のための開発セットアップ"

#: ../../documentation/repository-files/readme-file-best-practices.md:157
msgid "Your code of conduct"
msgstr "あなたの行動規範"

#: ../../documentation/repository-files/readme-file-best-practices.md:158
msgid "Licensing information"
msgstr "ライセンス情報"

#: ../../documentation/repository-files/readme-file-best-practices.md:160
msgid ""
"All of the above files are important for building community around your "
"project."
msgstr "上記のファイルはすべて、あなたのプロジェクトを取り巻くコミュニティを構築するために重要です。"

#: ../../documentation/repository-files/readme-file-best-practices.md:163
msgid "✔️ Citation information"
msgstr "✔️ 引用情報"

#: ../../documentation/repository-files/readme-file-best-practices.md:165
msgid ""
"Finally be sure to include instructions on how to cite your package. "
"Citation should include the DOI that you want used when citing your "
"package, and any language that you'd like to see associated with the "
"citation."
msgstr "最後に、パッケージの引用方法を必ず明記してください。引用には、パッケージを引用する際に使用してほしいDOIと、引用に関連する言語を含めてください。"

#: ../../documentation/repository-files/readme-file-best-practices.md:169
msgid "README Resources"
msgstr "READMEリソース"

#: ../../documentation/repository-files/readme-file-best-practices.md:173
msgid ""
"Below are some resources on creating great README.md files that you might"
" find helpful."
msgstr "以下に、優れたREADME.mdファイルを作成するためのリソースをいくつか紹介するので、参考にしてください。"

#: ../../documentation/repository-files/readme-file-best-practices.md:176
msgid ""
"[How to Write a Great README - Bane "
"Sullivan](https://github.com/banesullivan/README)"
msgstr ""
"[How to Write a Great README - Bane "
"Sullivan](https://github.com/banesullivan/README)"

#: ../../documentation/repository-files/readme-file-best-practices.md:177
msgid ""
"[Art of README - Kira (@hackergrrl)](https://github.com/hackergrrl/art-"
"of-readme)"
msgstr ""
"[Art of README - Kira (@hackergrrl)](https://github.com/hackergrrl/art-"
"of-readme)"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:1
msgid "Create tutorials in your Python package documentation"
msgstr "Pythonパッケージのドキュメントにチュートリアルを作成する"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:6
msgid ""
"Your package should have tutorials that make it easy for a user to get "
"started using your package. Ideally, those tutorials also can be run from"
" start to finish providing a second set of checks (on top of your test "
"suite) to your package's code base."
msgstr ""
"パッケージには、ユーザが簡単にパッケージを使い始められるようなチュートリアルがあるべきです。 "
"理想的には、チュートリアルは最初から最後まで実行することができ、パッケージのコードベースに対する (テストスイートの上にある) "
"第二のチェックセットを提供することです。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:11
msgid ""
"On this page, we review two Sphinx extensions (`sphinx-gallery` and "
"`nbsphinx`) that  allow you to create reproducible tutorials that are run"
" when your Sphinx documentation builds."
msgstr ""
"このページでは、あなたのSphinxドキュメントがビルドされたときに実行される、2つのSphinx拡張機能 (`sphinx-gallery` と"
" `nbsphinx`) について紹介します。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:15
msgid "Create Python package tutorials that run when you build your docs"
msgstr "ドキュメントのビルド時に実行されるPythonパッケージチュートリアルの作成"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:17
msgid ""
"Adding well constructed tutorials to your package will make it easier for"
" someone new to begin using your package."
msgstr "よく構成されたチュートリアルをパッケージに加えることで、新しい人があなたのパッケージを使い始めるのが簡単になります。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:20
msgid ""
"There are two Sphinx tools that make it easy to add tutorials to your "
"package:"
msgstr "チュートリアルを簡単にパッケージに追加できるSphinxのツールが2つあります:"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:22
msgid "[Sphinx Gallery](https://sphinx-gallery.github.io/stable/index.html) and"
msgstr "[Sphinx Gallery](https://sphinx-gallery.github.io/stable/index.html) と"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:23
msgid "[NbSphinx](https://nbsphinx.readthedocs.io/en/latest/)"
msgstr "[NbSphinx](https://nbsphinx.readthedocs.io/en/latest/)"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:25
msgid "Both of these tools act as Sphinx extensions and:"
msgstr "これらのツールはどちらもSphinxの拡張機能として機能します:"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:27
msgid ""
"Support creating a gallery type page in your Sphinx documentation where "
"users can explore tutorials via thumbnails."
msgstr "ユーザーがチュートリアルをサムネイルで見ることができる、Sphinxドキュメントのギャラリータイプのページの作成をサポートしました。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:28
msgid ""
"Run the code in your tutorials adding another level of \"testing\" for "
"your package as used."
msgstr "チュートリアルのコードを実行し、使用するパッケージの \"テスト\" をもう一段階追加する。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:29
msgid "Render your tutorials with Python code and plot outputs"
msgstr "Pythonコードによるチュートリアルのレンダリングとプロット出力"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:31
msgid "[sphinx gallery:](https://sphinx-gallery.github.io/stable/index.html)"
msgstr "[sphinx gallery:](https://sphinx-gallery.github.io/stable/index.html)"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:33
msgid ""
"If you prefer to write your tutorials using Python **.py** scripts, you "
"may enjoy using Sphinx gallery. Sphinx gallery uses **.py** files with "
"text and code sections that mimic the Jupyter Notebook format. When you "
"build your documentation, the gallery extension:"
msgstr ""
"もしPythonの **.py** スクリプトを使ってチュートリアルを書きたいのであれば、Sphinx galleryを使うと楽しいでしょう。 "
"Sphinx galleryは、Jupyter Notebookのフォーマットを模倣した、テキストとコードのセクションを持つ **.py** "
"ファイルを使用します。 ドキュメントをビルドするときは、ギャラリーの拡張子は:"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:38
msgid ""
"Runs the code in each tutorial. Running your tutorial like this acts as a"
" check to ensure your package's functions, classes, methods, and "
"attributes (ie the API) are working as they should."
msgstr ""
"各チュートリアルのコードを実行します。 "
"このようにチュートリアルを実行することで、パッケージの関数、クラス、メソッド、アトリビュート(つまりAPI)が正常に動作しているかどうかを確認することができます。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:39
msgid ""
"Creates a downloadable Jupyter Notebook **.ipynb** file and a  **.py** "
"script for your tutorial that a user can quickly download and run."
msgstr ""
"ダウンロード可能なJupyter Notebookの **.ipynb** ファイルとチュートリアル用の **.py** "
"スクリプトを作成し、ユーザーがすぐにダウンロードして実行できるようにします。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:40
msgid ""
"Creates a rendered  **.html** page with the code elements and code "
"outputs in a user-friendly tutorial gallery."
msgstr "レンダリングされた **.html** ページを作成し、ユーザーフレンドリーなチュートリアルギャラリーにコード要素とコード出力を表示します。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:41
msgid ""
"Creates a gallery landing page with visual thumbnails for each tutorial "
"that you create."
msgstr "作成した各チュートリアルのビジュアルサムネイル付きギャラリーランディングページを作成します。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:44
msgid ""
"Image showing the gallery output provided by sphinx-gallery where each "
"tutorial is in a grid and the tutorial thumbnails are created from a "
"graphic in the tutorial."
msgstr ""
"画像はsphinx-"
"galleryによって提供されるギャラリーの出力を示しており、各チュートリアルはグリッド内にあり、チュートリアルのサムネイルはチュートリアルのグラフィックから作成されます。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:50
msgid ""
"`sphinx-gallery` makes it easy to create a user-friendly tutorial "
"gallery. Each tutorial has a download link where the user can download a "
"**.py** file or a Jupyter Notebook. And it renders the tutorials in a "
"user-friendly grid."
msgstr ""
"`sphinx-gallery` は、ユーザーフレンドリーなチュートリアルギャラリーを簡単に作成することができます。 "
"それぞれのチュートリアルにはダウンロードリンクがあり、ユーザーは **.py** ファイルやJupyter "
"Notebookをダウンロードすることができます。 また、チュートリアルはユーザーフレンドリーなグリッドで表示されます。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:54
msgid "Below you can see what a tutorial looks like created with sphinx-gallery."
msgstr "下記はsphinx-galleryで作成したチュートリアルの様子です。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:56
msgid ""
"Image showing ta single tutorial from Sphinx gallery. The tutorial shows "
"a simple matplotlib created plot and associated code."
msgstr ""
"画像はSphinxギャラリーのチュートリアルです。 "
"このチュートリアルでは、簡単なmatplotlibで作成したプロットと、それに関連するコードを示しています。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:62
msgid ""
"`sphinx-gallery` tutorials by default include download links for both the"
" python script (**.py** file) and a Jupyter notebook (**.ipynb** file) at"
" the bottom."
msgstr ""
"`sphinx-gallery` のチュートリアルは、デフォルトでは、Pythonスクリプト (**.py** "
"ファイル)とJupyterノートブック (**.ipynb** ファイル)のダウンロードリンクが下部に含まれています。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:66
msgid "Sphinx Gallery benefits"
msgstr "Sphinx Galleryの利点"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:67
msgid "easy-to-download notebook and .py outputs for each tutorials."
msgstr "簡単にダウンロードできるノートブックと各チュートリアルの .py 出力。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:68
msgid ".py files are easy to work with in the GitHub pull request environment."
msgstr ".pyファイルはGitHubのプルリクエスト環境で簡単に扱えます。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:69
msgid "Nice gridded gallery output."
msgstr "素敵なグリッドギャラリーの出力。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:70
msgid ""
"Build execution time data per tutorial. [Example](https://sphinx-"
"gallery.github.io/stable/auto_examples/sg_execution_times.html)"
msgstr ""
"チュートリアルごとのビルド実行時間データ。 [例](https://sphinx-"
"gallery.github.io/stable/auto_examples/sg_execution_times.html)"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:72
msgid "Sphinx gallery challenges"
msgstr "Sphinx galleryの挑戦"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:74
msgid "The downsides of using Sphinx gallery include:"
msgstr "Sphinx galleryを使うことのデメリットは以下の通りです:"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:76
msgid ""
"the **.py** files can be finicky to configure, particularly if you have "
"matplotlib plot outputs."
msgstr "**.py** ファイルは、特にmatplotlibのプロット出力がある場合、設定に手こずることがあります。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:78
msgid ""
"For example: To allow for plots to render, you need to name each file "
"with `plot_` at the beginning."
msgstr "例えば: プロットをレンダリングできるようにするには、各ファイルの先頭に `plot_` を付ける必要があります。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:81
msgid ""
"Many users these days are used to working in Jupyter Notebooks. .py may "
"be slightly less user friendly to work with"
msgstr "最近、多くのユーザーはJupyter Notebookで作業することに慣れています。.pyは作業するのに少し使いにくいかもしれません"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:83
msgid ""
"These nuances can make it challenging for potential contributors to add "
"tutorials to your package. This can also present maintenance challenge."
msgstr ""
"このようなニュアンスの違いは、潜在的な貢献者があなたのパッケージにチュートリアルを追加することを困難にする可能性があります。 "
"これはまた、メンテナンスの課題でもあります。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:86
msgid "Add about the gallery setup:"
msgstr "ギャラリーのセットアップについて追加します:"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:93
msgid "File directory structure:"
msgstr "ファイルのディレクトリ構造:"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:114
msgid ""
"[nbsphinx - tutorials using Jupyter "
"Notebooks](https://nbsphinx.readthedocs.io/en/latest/)"
msgstr ""
"[nbsphinx - Jupyter "
"Notebooksを使ったチュートリアル](https://nbsphinx.readthedocs.io/en/latest/)"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:116
msgid ""
"If you prefer to use Jupyter Notebooks to create tutorials you can use "
"nbsphinx. nbsphinx operates similarly to Sphinx gallery in that:"
msgstr ""
"もしチュートリアルを作成するのにJupyter "
"Notebooksを使いたい場合は、nbsphinxを使うことができます。nbsphinxはSphinx galleryと同じように動作します:"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:119
msgid "It runs your notebooks and produces outputs in the rendered tutorials"
msgstr "ノートブックを実行し、レンダリングされたチュートリアルの出力を生成します。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:121
msgid ""
"Pro/con By default it does not support downloading of **.py** and "
"**.ipynb** files. However you can add a [link to the notebook at the top "
"of the page with some additional conf.py settings (see: epilog "
"settings)](https://nbsphinx.readthedocs.io/en/0.8.10/prolog-and-"
"epilog.html)"
msgstr ""
"Pro/con デフォルトでは **.py** と **.ipynb** ファイルのダウンロードをサポートしていません。 しかし、 "
"[conf.pyの設定(epilog "
"settingsを参照)を追加したノートブックへのリンク](https://nbsphinx.readthedocs.io/en/0.8.10"
"/prolog-and-epilog.html) を追加することができます。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:125
msgid ""
"Image showing the gallery output provided by nbsphinx using the sphinx-"
"gallery front end interface."
msgstr "画像は、nbsphinxがsphinx-galleryフロントエンドインターフェースを使用して提供したギャラリーの出力を示しています。"

#: ../../documentation/write-user-documentation/create-package-tutorials.md:131
msgid ""
"`nbsphinx` can be combined with Sphinx gallery to create a gallery of "
"tutorials. However, rather than rendering the gallery as a grid, it lists"
" all of the gallery elements in a single column."
msgstr ""
"`nbsphinx` はチュートリアルのギャラリーを作成するために、Sphinx galleryと組み合わせることができます。 "
"しかし、ギャラリーをグリッドとしてレンダリングするのではなく、1つのカラムに全てのギャラリー要素をリストアップします。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:1
msgid "Document the code in your package's API using docstrings"
msgstr "docstringsを使って、パッケージのAPIのコードを文書化する。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:3
msgid "What is an API?"
msgstr "APIとは何か？"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:5
msgid ""
"API stands for **A**pplied **P**rogramming **I**nterface. When discussed "
"in the context of a (Python) package, the API refers to the functions, "
"classes, methods, and attributes that a package maintainer creates for "
"users."
msgstr ""
"API は **A**pplied **P**rogramming **I**nterface の略です。 "
"(Pythonの)パッケージの文脈で議論される場合、APIはパッケージメンテナがユーザーのために作成する関数、クラス、メソッド、属性を指します。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:9
msgid ""
"A simple example of a package API element: For instance, a package might "
"have a function called `add_numbers()` that adds up a bunch of numbers. "
"To add up numbers, you as the user simply call `add_numbers(1,2,3)` and "
"the package function calculates the value and returns `6`. By calling the"
" `add_numbers` function, you are using the package's API."
msgstr ""
"パッケージAPI要素の単純な例： 例えば、あるパッケージに `add_numbers()` "
"という関数があり、その関数はたくさんの数字を足し算するとします。 数字を足し算するには、ユーザは `add_numbers(1,2,3)` "
"を呼び出すだけで、パッケージの関数が値を計算して `6` を返します。 `add_numbers` "
"関数を呼び出すことで、パッケージのAPIを使用していることになります。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:15
msgid ""
"Package APIs consist of functions, classes, methods and attributes that "
"create a user interface."
msgstr "パッケージAPIは、ユーザーインターフェイスを作成する関数、クラス、メソッド、属性から構成されます。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:17
msgid "What is a docstring and how does it relate to documentation?"
msgstr "docstringとは何ですか？docstringとドキュメンテーションの関係は？"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:19
msgid ""
"In Python, a docstring refers to text in a function, method or class that"
" describes what the function does and its inputs and outputs. Python "
"programmers usually refer to the inputs to functions as "
"[\"parameters\"](https://docs.python.org/3/glossary.html#term-parameter) "
"or [\"arguments\"](https://docs.python.org/3/faq/programming.html#faq-"
"argument-vs-parameter), and the outputs are often called \"return "
"values\""
msgstr ""
"Pythonにおいてdocstringとは、関数、メソッド、クラスにおいて、その関数が何を行うのか、その入出力を記述したテキストを指します。 "
"Pythonプログラマは通常、関数への入力を "
"[\"parameters\"](https://docs.python.org/3/glossary.html#term-parameter) "
"または [\"arguments\"](https://docs.python.org/3/faq/programming.html#faq-"
"argument-vs-parameter) と呼び、出力を \"return values\" と呼ぶことが多いです。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:22
msgid "The docstring is thus important for:"
msgstr "docstringは以下のために重要です:"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:24
msgid ""
"When you call `help()` in Python, for example, `help(add_numbers)` will "
"show the text of the function's docstring. The docstring thus helps a "
"user better understand how to apply the function more effectively to "
"their workflow."
msgstr ""
"Pythonで `help()` を呼び出すと、例えば `help(add_numbers)` は関数のdocstringのテキストを表示します。"
" このようにdocstringは、ユーザが自分のワークフローにより効果的に関数を適用する方法をよりよく理解するのに役立ちます。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:25
msgid ""
"When you build your package's documentation, the docstrings can also be "
"used to automatically create full API documentation that provides a clean"
" view of all its functions, classes, methods, and attributes."
msgstr "パッケージのドキュメントを作成するとき、docstringsを使用して、すべての関数、クラス、メソッド、属性をきれいに表示する完全なAPIドキュメントを自動的に作成することもできます。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:28
msgid ""
"Example API Documentation for all functions, classes, methods, and "
"attributes in a package."
msgstr "パッケージ内のすべての関数、クラス、メソッド、属性の API ドキュメントの例。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:29
msgid ""
"[View example high-level API documentation for the Verde package. This "
"page lists every function and class in the package along with a brief "
"explanation of what it "
"does](https://www.fatiando.org/verde/latest/api/index.html)"
msgstr ""
"[Verdeパッケージの高レベルAPIドキュメントの例をご覧ください。 "
"このページには、パッケージ内のすべての関数とクラスが、その機能の簡単な説明とともに一覧表示されています](https://www.fatiando.org/verde/latest/api/index.html)"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:30
msgid ""
"[You can further dig down to see what a specific function does within the"
" package by clicking on an API "
"element](https://www.fatiando.org/verde/latest/api/generated/verde.grid_coordinates.html#verde.grid_coordinates)"
msgstr "[APIエレメントをクリックすることで、パッケージ内で特定の関数が何を行っているかをさらに掘り下げて確認することができます](https://www.fatiando.org/verde/latest/api/generated/verde.grid_coordinates.html#verde.grid_coordinates)"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:33
msgid "Python package API documentation"
msgstr "PythonパッケージAPIドキュメント"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:35
msgid ""
"If you have a descriptive docstring for every user-facing class, method, "
"attribute and/or function in your package (_within reason_), then your "
"package's API is considered well-documented."
msgstr "もし、あなたのパッケージのすべてのユーザー向けクラス、メソッド、属性、関数に説明的なdocstringがあれば（_合理的な範囲内で_）、そのパッケージのAPIは十分に文書化されているとみなされます。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:38
msgid ""
"In Python, this means that you need to add a docstring for every user-"
"facing class, method, attribute and/or function in your package (_within "
"reason_) that:"
msgstr ""
"Pythonの場合、これは、パッケージ内のすべてのユーザー向けのクラス、メソッド、属性、および/または関数について、 (_無理のない範囲で_) "
"docstringを追加する必要があることを意味します:"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:42
msgid "Explains what the function, method, attribute, or class does"
msgstr "関数、メソッド、属性、またはクラスが何をするのかを説明します"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:43
msgid "Defines the `type` inputs and outputs (ie. `string`, `int`, `np.array`)"
msgstr "入力と出力の `type` を定義します( `string` 、 `int` 、 `np.array` など)"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:44
msgid "Explains the expected output `return` of the object, method or function."
msgstr "オブジェクト、メソッド、関数の期待される出力 `return` を説明する。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:47
msgid "Three Python docstring formats and why we like NumPy style"
msgstr "Pythonの3つのdocstringフォーマットとNumPyスタイルが好きな理由"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:49
msgid ""
"There are several Python docstring formats that you can choose to use "
"when documenting your package including:"
msgstr "Pythonのdocstringフォーマットには、パッケージを文書化する際に使用できるものがいくつかあります:"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:52
msgid ""
"[NumPy-style](https://numpydoc.readthedocs.io/en/latest/format.html"
"#docstring-standard)"
msgstr ""
"[NumPy-style](https://numpydoc.readthedocs.io/en/latest/format.html"
"#docstring-standard)"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:53
msgid ""
"[google style](https://sphinxcontrib-"
"napoleon.readthedocs.io/en/latest/example_google.html)"
msgstr ""
"[google style](https://sphinxcontrib-"
"napoleon.readthedocs.io/en/latest/example_google.html)"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:54
msgid ""
"[reST style](https://sphinx-rtd-"
"tutorial.readthedocs.io/en/latest/docstrings.html)"
msgstr ""
"[reST style](https://sphinx-rtd-"
"tutorial.readthedocs.io/en/latest/docstrings.html)"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:58
msgid ""
"We suggest using [NumPy-style "
"docstrings](https://numpydoc.readthedocs.io/en/latest/format.html"
"#docstring-standard) for your Python documentation because:"
msgstr ""
"Pythonのドキュメントには [NumPy-style "
"docstrings](https://numpydoc.readthedocs.io/en/latest/format.html"
"#docstring-standard) を使うことをお勧めします:"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:61
msgid ""
"NumPy style docstrings are core to the scientific Python ecosystem and "
"defined in the [NumPy style "
"guide](https://numpydoc.readthedocs.io/en/latest/format.html). Thus you "
"will find them widely used there."
msgstr ""
"NumPyスタイルのdocstringは、科学的なPythonエコシステムの中核であり、 "
"[NumPyスタイルガイド](https://numpydoc.readthedocs.io/en/latest/format.html) "
"で定義されています。 そのため、NumPyスタイルガイドで広く使われています。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:62
msgid ""
"The Numpy style docstring is simplified and thus easier to read both in "
"the code and when calling `help()` in Python. In contrast, some feel that"
" reST style docstrings are harder to quickly scan, and can take up more "
"lines of code in modules."
msgstr ""
"Numpyスタイルのドキュメントストリングは単純化されているので、コード内でもPythonで `help()` "
"を呼び出すときでも読みやすくなっています。 "
"対照的に、reSTスタイルのdocstringは素早くスキャンするのが難しく、モジュールの中でより多くの行を占める可能性があると感じる人もいます。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:65
msgid ""
"If you are using NumPy style docstrings, be sure to include the [sphinx "
"napoleon extension](https://www.sphinx-"
"doc.org/en/master/usage/extensions/napoleon.html) in your documentation "
"`conf.py` file. This extension allows Sphinx to properly read and format "
"NumPy format docstrings."
msgstr ""
"もしNumPy形式のドキュメントを使用しているのであれば、ドキュメントの `conf.py` ファイルに [sphinx napoleon "
"extension](https://www.sphinx-"
"doc.org/en/master/usage/extensions/napoleon.html) を含めるようにしてください。 "
"この拡張機能により、SphinxはNumPy形式のドキュメントを正しく読み、フォーマットすることができます。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:70
msgid "Docstring examples Better and Best"
msgstr "Docstringの例 Better と Best"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:72
msgid ""
"Below is a good example of a well-documented function. Notice that this "
"function's docstring describes the function's inputs and the function's "
"output (or return value). The initial description of the function is "
"short (one line). Following that single-line description, there is a "
"slightly longer description of what the function does (2 to 3 sentences)."
" The return of the function is also specified."
msgstr ""
"以下はよく文書化された関数の良い例です。 "
"この関数のdocstringには、関数の入力と出力（または戻り値）が記述されていることに注目してください。 関数の最初の説明は短いです（1行）。 "
"その1行の説明に続いて、関数が何をするのかについて少し長い説明があります（2～3文）。 関数の戻り値も指定されています。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:106
msgid "Best: a docstring with example use of the function"
msgstr "ベスト: 関数の使用例を記載したdocstring"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:108
msgid ""
"This example contains an example of using the function that is also "
"tested in sphinx using "
"[doctest](https://docs.python.org/3/library/doctest.html)."
msgstr ""
"この例には、sphinxでも [doctest](https://docs.python.org/3/library/doctest.html) "
"を使ってテストされている関数の使用例が含まれています。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:159
msgid ""
"Using the above NumPy format docstring in sphinx, the autodoc extension "
"will create the about documentation section for the `extent_to_json` "
"function. The output of the `es.extent_to_json(rmnp)` command can even be"
" tested using doctest adding another quality check to your package."
msgstr ""
"上記のNumPyフォーマットのdocstringをsphinxで使用すると、autodocエクステンションが `extent_to_json` "
"関数のabout documentationセクションを作成します。  `es.extent_to_json(rmnp)` "
"コマンドの出力は、doctestを使ってテストすることもできます。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:165
msgid ""
"Using doctest to run docstring examples in your package's methods and "
"functions"
msgstr "doctestを使って、パッケージのメソッドや関数でdocstringのサンプルを実行します。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:170
msgid ""
"Above, we provided some examples of good, better, best docstring formats."
" If you are using Sphinx to create your docs, you can add the "
"[doctest](https://www.sphinx-"
"doc.org/en/master/usage/extensions/doctest.html) extension to your Sphinx"
" build. Doctest provides an additional check for docstrings with example "
"code in them. Doctest runs the example code in your docstring `Examples` "
"checking that the expected output is correct. Similar to running "
"tutorials in your documentation, `doctest` can be a useful step that "
"assures that your package's code (API) runs as you expect it to."
msgstr ""
"上記では、良いdocstringフォーマット、より良いdocstringフォーマット、ベストなdocstringフォーマットの例をいくつか紹介しました。"
" もしSphinxを使ってドキュメントを作成しているのであれば、 [doctest](https://www.sphinx-"
"doc.org/en/master/usage/extensions/doctest.html) "
"という拡張機能をSphinxビルドに追加することができます。Doctestは、サンプルコードを含むdocstringに対して追加のチェックを行います。"
" Doctest は、docstring `Examples` 内のサンプルコードを実行し、期待される出力が正しいかどうかをチェックします。 "
"ドキュメントのチュートリアルを実行するのと同様に、 `doctest` はパッケージのコード (API) "
"が期待通りに動作することを保証する便利なステップになります。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:177
msgid ""
"It's important to keep in mind that examples in your docstrings help "
"users using your package. Running `doctest` on those examples provides a "
"check of your package's API. The doctest ensures that the functions and "
"methods in your package run as you expect them to. Neither of these items"
" replace a separate, stand-alone test suite that is designed to test your"
" package's core functionality across operating systems and Python "
"versions."
msgstr ""
"docstrings にあるサンプルは、あなたのパッケージを使っているユーザーを 助けるものであるということを覚えておくことが重要です。 "
"これらのサンプルに対して `doctest` を実行することで、パッケージの API をチェックすることができます。 "
"これらの項目はどちらも、オペレーティングシステムや Python "
"のバージョンにまたがってパッケージのコア機能をテストするように設計された、独立したテストスイートを置き換えるものではありません。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:185
msgid ""
"Below is an example of a docstring with an example. doctest will run the "
"example below and test that if you provide `add_me` with the values 1 and"
" 3 it will return 4."
msgstr "doctestは以下の例を実行し、 `add_me` に1と3の値を与えると4が返されることをテストします。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:218
msgid "Adding type hints to your docstrings"
msgstr "docstringに型ヒントを追加する"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:220
msgid ""
"In the example above, you saw the use of numpy-style docstrings to "
"describe data types that are passed into functions as parameters or into "
"classes as attributes. In a numpy-style docstring you add those types in "
"the Parameters section of the docstring. Below you can see that the "
"parameter `num1` and `num2` should both be a Python `int` (integer) "
"value."
msgstr ""
"上の例では、パラメータとして関数に渡されるデータ型や、属性としてクラスに渡されるデータ型を記述するために、numpyスタイルのdocstringを使用することを見ました。"
" numpyスタイルのdocstringでは、docstringのParametersセクションにそれらのデータ型を追加します。 "
"下の例では、パラメータ `num1` と `num2` は両方とも Python の `int` (整数) 値であるべきであることがわかります。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:235
msgid ""
"Describing the expected data type that a function or method requires "
"helps users better understand how to call a function or method."
msgstr "関数やメソッドが必要とするデータ型を記述することで、ユーザーが関数やメソッドの呼び出し方をより理解しやすくなります。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:238
msgid ""
"Type-hints add another layer of type documentation to your code. Type-"
"hints make it easier for new developers, your future self or contributors"
" to get to know your code base quickly."
msgstr ""
"型ヒントは、あなたのコードに型ドキュメントの別のレイヤーを追加します。 "
"型ヒントは、新しい開発者や将来の自分、あるいは貢献者が、あなたのコードベースについて素早く知ることを容易にします。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:242
msgid ""
"Type hints are added to the definition of your function. In the example "
"below, the parameters aNum and aNum2 are defined as being type = int "
"(integer)."
msgstr "型のヒントは関数の定義に追加されます。 以下の例では、パラメータaNumとaNum2はtype = int（整数）として定義されています。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:249
msgid ""
"You can further describe the expected function output using `->`. Below "
"the output of the function is also an int."
msgstr "さらに `->` を使って、期待される関数の出力を記述することができます。以下の関数の出力も int です。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:257
msgid "Why use type hints"
msgstr "型ヒントを使う理由"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:259
msgid "Type hints:"
msgstr "型ヒント:"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:261
msgid "Make development and debugging faster,"
msgstr "開発とデバッグをより速くします、"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:262
msgid ""
"Make it easier for a user to see the data format inputs and outputs of "
"methods and functions,"
msgstr "メソッドや関数のデータ・フォーマットの入出力を、ユーザーが見やすくします、"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:263
msgid ""
"Support using static type checking tools such as [`mypy`](https://mypy-"
"lang.org/) which will check your code to ensure types are correct."
msgstr ""
"型が正しいことを確認するためにコードをチェックする [`mypy`](https://mypy-lang.org/) "
"のような静的型チェックツールの使用をサポートします。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:265
msgid "You should consider adding type hinting to your code if:"
msgstr "あなたのコードにタイプヒンティングを追加することを検討すべきです:"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:267
msgid "Your package performs data processing,"
msgstr "あなたのパッケージはデータ処理を行います、"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:268
msgid "You use functions that require complex inputs"
msgstr "複雑な入力を必要とする関数を使用しています"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:269
msgid ""
"You want to lower the entrance barrier for new contributors to help you "
"with your code."
msgstr "あなたは、あなたのコードを手助けしてくれる新しい貢献者の入り口の障壁を低くしたいです。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:271
msgid "Beware of too much type hinting"
msgstr "型ヒントの多用に注意してください"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:274
msgid "As you add type hints to your code consider that in some cases:"
msgstr "コードに型ヒントを追加する際には、場合によってはこのようなこともあることを考慮してほしい:"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:276
msgid ""
"If you have a complex code base, type hints may make code more difficult "
"to read. This is especially true when a parameter’s input takes multiple "
"data types and you list each one."
msgstr ""
"複雑なコードベースを持っている場合、型ヒントはコードを読みにくくする可能性がある。 "
"パラメーターの入力が複数のデータ型を取り、それぞれをリストアップする場合は特にそうだ。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:277
msgid ""
"Writing type hints for simple scripts and functions that perform obvious "
"operations don't make sense."
msgstr "単純なスクリプトや明らかな操作を行う関数に型ヒントを書いても意味がありません。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:280
msgid "Gradually adding type hints"
msgstr "型ヒントを徐々に追加"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:282
msgid ""
"Adding type hints can take a lot of time. However, you can add type hints"
" incrementally as you work on your code."
msgstr "型ヒントの追加には多くの時間がかかります。 しかし、コードを書きながら少しずつ型ヒントを追加していくことができます。"

#: ../../documentation/write-user-documentation/document-your-code-api-docstrings.md:286
msgid ""
"Adding type hints is also a great task for new contributors. It will help"
" them get to know your package's code and structure better before digging"
" into more complex contributions."
msgstr ""
"型ヒントを追加することは、新しい貢献者にとっても素晴らしい作業です。 "
"より複雑な貢献をする前に、あなたのパッケージのコードと構造をよりよく知ることができます。"

#: ../../documentation/write-user-documentation/get-started.md:1
msgid "Create User Facing Documentation for your Python Package"
msgstr "Pythonパッケージのユーザー向けドキュメントを作成する"

#: ../../documentation/write-user-documentation/get-started.md:14
msgid "Core components of user-facing Python package documentation"
msgstr "ユーザー向けPythonパッケージドキュメントのコアコンポーネント"

#: ../../documentation/write-user-documentation/get-started.md:15
msgid "Below we break documentation into two broad types."
msgstr "以下では、ドキュメントを2つのタイプに大別します。"

#: ../../documentation/write-user-documentation/get-started.md:17
msgid ""
"**User-facing documentation** refers to documentation that describes the "
"way the tools within a package are broadly used in workflows. **API "
"documentation** refers to documentation of functions, classes, methods, "
"and attributes in your code and is written at a more granular level. This"
" documentation is what a user sees when they type `help(function-name)`."
msgstr ""
"**ユーザー向け文書** は、パッケージ内のツールがワークフローで広く使用される方法を説明する文書を指します。 **APIドキュメント** "
"は、コード内の関数、クラス、メソッド、属性のドキュメントを指し、より細かいレベルで書かれています。 このドキュメントは、ユーザーが `help"
"(function-name)` とタイプしたときに表示されるものです。"

#: ../../documentation/write-user-documentation/get-started.md:23
msgid ""
"Your user-facing documentation for your Python package should include "
"several core components."
msgstr "Pythonパッケージのユーザー向けドキュメントには、いくつかのコアコンポーネントを含めるべきです。"

#: ../../documentation/write-user-documentation/get-started.md:26
msgid ""
"**Documentation Website:** This refers to easy-to-read documentation that"
" helps someone use your package. This documentation should help users "
"both install and use your package."
msgstr ""
"**ドキュメントウェブサイト:** これは、誰かがあなたのパッケージを使うのを助ける、読みやすいドキュメンテーションのことです。 "
"このドキュメンテーションは、ユーザがあなたのパッケージをインストールし、使うのを助けるものでなければなりません。"

#: ../../documentation/write-user-documentation/get-started.md:27
msgid ""
"**Short Tutorials:** Your user-facing documentation should also include "
"[**short tutorials** that showcase core features of your package](create-"
"package-tutorials)."
msgstr ""
"**短いチュートリアル:** ユーザー向けのドキュメントには、 [パッケージのコア機能を紹介する **短いチュートリアル** ](create-"
"package-tutorials) も含めるべきです。"

#: ../../documentation/write-user-documentation/get-started.md:28
msgid ""
"**Package Code / API documentation:** You package's functions, classes, "
"methods, and attributes (the API) should also be documented. API "
"documentation can be generated from "
"[docstrings](https://pandas.pydata.org/docs/development/contributing_docstring.html)"
" found in your code. Ideally, you have docstrings for all user-facing "
"functions, classes, and methods in your Python package. [We discuss code "
"documentation and docstrings in greater detail here.](document-your-code-"
"api-docstrings)"
msgstr ""
"**パッケージコード/APIドキュメント:** パッケージの関数、クラス、メソッド、属性（API）もドキュメント化されるべきです。 "
"APIドキュメントは、あなたのコードにある "
"[docstrings](https://pandas.pydata.org/docs/development/contributing_docstring.html)"
" から生成することができます。 "
"理想的には、Pythonパッケージ内のすべてのユーザー向けの関数、クラス、メソッドのdocstringがあることです。 "
"[コードドキュメンテーションとdocstringについてはこちらで詳しく説明します。](document-your-code-api-"
"docstrings)"

#: ../../documentation/write-user-documentation/get-started.md:32
msgid "Write usable documentation"
msgstr "使いやすい文書を書く"

#: ../../documentation/write-user-documentation/get-started.md:34
msgid ""
"User-facing documentation should be published on a easy-to-navigate "
"website. The documentation should be written keeping in mind that users "
"may not be developers or expert-level programmers. Rather, the language "
"that you use in your documentation should not be highly technical."
msgstr ""
"ユーザー向けのドキュメントは、閲覧しやすいウェブサイトで公開されるべきである。 "
"ドキュメントは、ユーザーが開発者や専門家レベルのプログラマーではないことを念頭に置いて書かれるべきです。 "
"むしろ、ドキュメントで使用する言語は、高度な技術的なものであってはなりません。"

#: ../../documentation/write-user-documentation/get-started.md:39
msgid ""
"To make the language of your documentation more accessible to a broader "
"audience:"
msgstr "ドキュメンテーションの言語を、より多くの読者が理解できるようにする:"

#: ../../documentation/write-user-documentation/get-started.md:42
msgid "Whenever possible, define technical terms and jargon."
msgstr "可能な限り、技術用語や専門用語を定義する。"

#: ../../documentation/write-user-documentation/get-started.md:43
msgid "Consider writing instructions for a high-school level reader."
msgstr "高校生レベルの読者を想定して指示を書く。"

#: ../../documentation/write-user-documentation/get-started.md:44
msgid ""
"Include step-by-step code examples, tutorials or vignettes that support "
"getting started using your package."
msgstr "あなたのパッケージの使い始めをサポートする、ステップ・バイ・ステップのコード例、チュートリアル、またはヴィネットを含めてください。"

#: ../../documentation/write-user-documentation/get-started.md:46
msgid "Four elements of a good open source documentation landing page"
msgstr "優れたオープンソース・ドキュメントのランディングページの4つの要素"

#: ../../documentation/write-user-documentation/get-started.md:48
msgid ""
"To make it easy for users to find what they need quickly, consider adding"
" quick links on your package's landing page to the following elements:"
msgstr "ユーザーが必要なものをすぐに見つけられるように、パッケージのランディングページに以下の要素へのクイックリンクを追加することを検討してください:"

#: ../../documentation/write-user-documentation/get-started.md:52
msgid ""
"**Getting started:** This section should provide the user with a quick "
"start for installing your package. A small example of how to use the "
"package is good to have here as well. Or you can link to useful tutorials"
" in the get started section."
msgstr ""
"**Getting started:** このセクションは、あなたのパッケージをインストールするためのクイックスタート をユーザーに提供するものです。 "
"パッケージの使い方の小さな例もここにあると良いでしょう。 または、便利なチュートリアルへのリンクを、スタートセクションに置くこともできます。"

#: ../../documentation/write-user-documentation/get-started.md:53
msgid ""
"**About:** Describe your project,  stating its goals and its "
"functionality."
msgstr "**About:** プロジェクトについて、その目標と機能を説明してください。"

#: ../../documentation/write-user-documentation/get-started.md:54
msgid ""
"**Community:** Instructions for how to help and/or get involved. This "
"might include links to your issues (if that is where you let users ask "
"questions) or the discussion part of your GitHub repo. This section might"
" include a development guide for those who might contribute to your "
"package."
msgstr ""
"**Community:** どのように手伝ったり、参加したりするかについての説明。 このセクションには、issue "
"(ユーザーに質問できるようにしている場合) や GitHub リポジトリのディスカッションへのリンクが含まれます。 "
"このセクションには、あなたのパッケージに貢献するかもしれない人のための開発ガイドを含めることができます。"

#: ../../documentation/write-user-documentation/get-started.md:55
msgid ""
"**API Documentation:** This is the detailed project documentation. Here "
"you store documentation for your package's API including all user-facing "
"functions, classes, methods, and attributes as well as any additional "
"high level discussion that will help people use your package."
msgstr ""
"**APIドキュメント:** これはプロジェクトの詳細なドキュメントです。 "
"ここには、ユーザー向けの関数、クラス、メソッド、属性、およびパッケージの使用に役立つ追加的な高レベルのディスカッションを含む、パッケージのAPIのドキュメントを保存します。"

#: ../../documentation/write-user-documentation/get-started.md:58
msgid ""
"Image showing the landing page for GeoPandas documentation which has 4 "
"sections including Getting started, Documentation, About GeoPandas, "
"Community."
msgstr ""
"画像は GeoPandas ドキュメントのランディングページで、Getting started、Documentation、About "
"GeoPandas、Community の 4 つのセクションがあります。"

#: ../../documentation/write-user-documentation/get-started.md:64
msgid ""
"The documentation landing page of GeoPandas, a spatial Python library, "
"has the 4 element specified above. Notice that the landing page is simple"
" and directs users to each element using a Sphinx card."
msgstr ""
"空間的なPythonライブラリであるGeoPandasのドキュメントのランディングページには、上記の4つの要素が指定されています。 "
"ランディングページはシンプルで、Sphinxカードを使って各要素にユーザーを誘導していることに注目してください。"

#: ../../documentation/write-user-documentation/get-started.md:67
msgid ""
"NOTE: in many cases you can include your **README** file and your "
"**CONTRIBUTING** files in your documentation given those files may have "
"some of the components listed above."
msgstr ""
"NOTE: 多くの場合、 **README** ファイルと **CONTRIBUTING** "
"ファイルをドキュメントに含めることができま、これらのファイルには、上に挙げた構成要素のいくつかが含まれているかもしれません。"

#: ../../documentation/write-user-documentation/get-started.md:71
msgid ""
"You can include files in Sphinx using the include directive. Below is an "
"example of doing this using `myst` syntax."
msgstr "Sphinxではincludeディレクティブを使ってファイルをインクルードすることができます。 下記は `myst` 構文を使った例です。"

#: ../../documentation/write-user-documentation/intro.md:1
msgid "Writing user-facing documentation for your Python package"
msgstr "Pythonパッケージのユーザー向けドキュメントを書く"

#: ../../documentation/write-user-documentation/intro.md:3
msgid ""
"This section walks you through best practices for with writing "
"documentation for your Python package."
msgstr "このセクションでは、Python パッケージのドキュメント作成のベストプラクティスを説明します。"

#: ../../documentation/write-user-documentation/intro.md:6
msgid ""
"We talk about the elements that you should consider adding to your "
"documentation, the different types of users who might read your "
"documentation and how to create tutorials for your package."
msgstr "ドキュメントに追加することを検討すべき要素、ドキュメントを読む可能性のあるさまざまなタイプのユーザー、パッケージのチュートリアルを作成する方法について話します。"

#: ../../documentation/write-user-documentation/intro.md:10
msgid ""
"Here we also cover sphinx extensions that you can user to make "
"documentation easier such as:"
msgstr "ここでは、ドキュメンテーションを容易にするために使用できるsphinxの拡張機能についても説明します:"

#: ../../documentation/write-user-documentation/intro.md:13
msgid ""
"autodoc to automagically populate documentation for your code's "
"functions, classes, methods and attributes (API documentation) and"
msgstr "autodocは、あなたのコードの関数、クラス、メソッド、属性（APIドキュメント）のドキュメントを自動生成します。"

#: ../../documentation/write-user-documentation/intro.md:15
#, fuzzy
msgid "sphinx gallery for tutorials."
msgstr "チュートリアルのためのsphinxギャラリー。"
