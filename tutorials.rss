<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>pyOpenSci Tutorials</title>
    <link>https://www.pyopensci.org/python-package-guide/tutorials/intro.html</link>
    <atom:link href="https://www.pyopensci.org/python-package-guide/tutorials.rss" rel="self"/>
    <description>A tutorial feed that lists metadata for the pyOpenSci Python packaging tutorials so we can automatically list them on our website.</description>
    <language>en</language>
    <lastBuildDate>Fri, 18 Jul 2025 13:22:44 GMT</lastBuildDate>
<item>
  <title>Add a License and Code of Conduct to your python package</title>
  <link>https://www.pyopensci.org/python-package-guide/tutorials/add-license-coc.html</link>
  <description>Learn how to add a LICENSE and CODE_OF_CONDUCT file to your Python package. This lesson covers choosing a permissive license, placing key files for visibility on GitHub and PyPI, and adopting the Contributor Covenant to support an inclusive community.</description>
  <author>pyOpenSci</author>
  <guid isPermaLink="true">https://www.pyopensci.org/python-package-guide/tutorials/add-license-coc.html</guid>
  <pubDate>Fri, 18 Jul 2025 13:21:49 GMT</pubDate>
</item>
<item>
  <title>Add a README file to your Python package</title>
  <link>https://www.pyopensci.org/python-package-guide/tutorials/add-readme.html</link>
  <description>Learn how to create a clear, effective README file for your Python package. This lesson covers what to include, why each section matters, and how a well-structured README improves usability and discoverability on GitHub and PyPI.</description>
  <author>pyOpenSci</author>
  <guid isPermaLink="true">https://www.pyopensci.org/python-package-guide/tutorials/add-readme.html</guid>
  <pubDate>Fri, 18 Jul 2025 13:21:49 GMT</pubDate>
</item>
<item>
  <title>Command Line Reference Guide</title>
  <link>https://www.pyopensci.org/python-package-guide/tutorials/command-line-reference.html</link>
  <description>Learn how to add a command-line interface (CLI) to your Python package using the argparse library. This lesson walks you through creating a CLI entry point so users can run your package directly from the terminal.</description>
  <author>pyOpenSci</author>
  <guid isPermaLink="true">https://www.pyopensci.org/python-package-guide/tutorials/command-line-reference.html</guid>
  <pubDate>Fri, 18 Jul 2025 13:21:49 GMT</pubDate>
</item>
<item>
  <title>Create a Python package from scratch, a beginner-friendly tutorial</title>
  <link>https://www.pyopensci.org/python-package-guide/tutorials/create-python-package.html</link>
  <description>Learn how to create a Python package and make your code installable using Hatch. This tutorial walks you through structuring your code and configuring a pyproject.toml so others can easily install and use your package.</description>
  <author>pyOpenSci</author>
  <guid isPermaLink="true">https://www.pyopensci.org/python-package-guide/tutorials/create-python-package.html</guid>
  <pubDate>Fri, 18 Jul 2025 13:21:49 GMT</pubDate>
</item>
<item>
  <title>Use Hatch environments with your Python package: a beginner-friendly tutorial</title>
  <link>https://www.pyopensci.org/python-package-guide/tutorials/develop-python-package-hatch.html</link>
  <description>The pyOpenSci pure Python package template uses Hatch to manage environments and run tests, docs, and other maintenance steps. Learn how to use Hatch environments to manage your Python package.</description>
  <author>pyOpenSci</author>
  <guid isPermaLink="true">https://www.pyopensci.org/python-package-guide/tutorials/develop-python-package-hatch.html</guid>
  <pubDate>Fri, 18 Jul 2025 13:21:49 GMT</pubDate>
</item>
<item>
  <title>Get to Know Hatch</title>
  <link>https://www.pyopensci.org/python-package-guide/tutorials/get-to-know-hatch.html</link>
  <description>Get started with Hatch, a modern Python packaging tool. This lesson introduces Hatch’s features and shows how it simplifies environment management, project scaffolding, and building your package.</description>
  <author>pyOpenSci</author>
  <guid isPermaLink="true">https://www.pyopensci.org/python-package-guide/tutorials/get-to-know-hatch.html</guid>
  <pubDate>Fri, 18 Jul 2025 13:21:49 GMT</pubDate>
</item>
<item>
  <title>Python packaging 101</title>
  <link>https://www.pyopensci.org/python-package-guide/tutorials/intro.html</link>
  <description>This page outlines the key steps to create, document, and share a high-quality scientific Python package. Here you will also get an overview of the pyOpenSci packaging guide and what you’ll learn.</description>
  <author>pyOpenSci</author>
  <guid isPermaLink="true">https://www.pyopensci.org/python-package-guide/tutorials/intro.html</guid>
  <pubDate>Fri, 18 Jul 2025 13:21:49 GMT</pubDate>
</item>
<item>
  <title>Publish your Python package that is on PyPI to conda-forge</title>
  <link>https://www.pyopensci.org/python-package-guide/tutorials/publish-conda-forge.html</link>
  <description>Learn how to publish your Python package on conda-forge to make it easily installable with conda. This lesson covers the submission process, metadata requirements, and maintaining your feedstock.</description>
  <author>pyOpenSci</author>
  <guid isPermaLink="true">https://www.pyopensci.org/python-package-guide/tutorials/publish-conda-forge.html</guid>
  <pubDate>Fri, 18 Jul 2025 13:21:49 GMT</pubDate>
</item>
<item>
  <title>Publish your Python package to PyPI</title>
  <link>https://www.pyopensci.org/python-package-guide/tutorials/publish-pypi.html</link>
  <description>Learn how to publish your Python package on PyPI so others can install it using pip. This lesson covers building your package, creating a PyPI account, and uploading your distribution files.</description>
  <author>pyOpenSci</author>
  <guid isPermaLink="true">https://www.pyopensci.org/python-package-guide/tutorials/publish-pypi.html</guid>
  <pubDate>Fri, 18 Jul 2025 13:21:49 GMT</pubDate>
</item>
<item>
  <title>Make your Python package PyPI ready - pyproject.toml</title>
  <link>https://www.pyopensci.org/python-package-guide/tutorials/pyproject-toml.html</link>
  <description>The pyproject.toml file is the central configuration file for building and packaging Python projects. This lesson explains key sections like name, version, dependencies, and how they support packaging and distribution. You’ll learn how to set up this file to ensure your package is ready for publishing.</description>
  <author>pyOpenSci</author>
  <guid isPermaLink="true">https://www.pyopensci.org/python-package-guide/tutorials/pyproject-toml.html</guid>
  <pubDate>Fri, 18 Jul 2025 13:21:49 GMT</pubDate>
</item>
<item>
  <title>Using Hatch to Migrate setup.py to a pyproject.toml</title>
  <link>https://www.pyopensci.org/python-package-guide/tutorials/setup-py-to-pyproject-toml.html</link>
  <description>If you’re creating a pure Python project, pyproject.toml is preferred over setup.py for packaging and configuration. Learn how to migrate from the older setup.py format to the modern pyproject.toml file. This lesson walks you through updating your package metadata and build settings to align with current Python packaging standards.</description>
  <author>pyOpenSci</author>
  <guid isPermaLink="true">https://www.pyopensci.org/python-package-guide/tutorials/setup-py-to-pyproject-toml.html</guid>
  <pubDate>Fri, 18 Jul 2025 13:21:49 GMT</pubDate>
</item>
  </channel>
</rss>
        